[Config]
ConfigVersion = "0.13.1.300"
# Should SpriteMaster be enabled?
Enabled = true
# Button to toggle SpriteMaster
# Legal Values: [
#	[None, System.Collections.Generic.List`1[System.String]], 
#	[Back, System.Collections.Generic.List`1[System.String]], 
#	[Tab, System.Collections.Generic.List`1[System.String]], 
#	[Enter, System.Collections.Generic.List`1[System.String]], 
#	[Pause, System.Collections.Generic.List`1[System.String]], 
#	[CapsLock, System.Collections.Generic.List`1[System.String]], 
#	[Kana, System.Collections.Generic.List`1[System.String]], 
#	[Kanji, System.Collections.Generic.List`1[System.String]], 
#	[Escape, System.Collections.Generic.List`1[System.String]], 
#	[ImeConvert, System.Collections.Generic.List`1[System.String]], 
#	[ImeNoConvert, System.Collections.Generic.List`1[System.String]], 
#	[Space, System.Collections.Generic.List`1[System.String]], 
#	[PageUp, System.Collections.Generic.List`1[System.String]], 
#	[PageDown, System.Collections.Generic.List`1[System.String]], 
#	[End, System.Collections.Generic.List`1[System.String]], 
#	[Home, System.Collections.Generic.List`1[System.String]], 
#	[Left, System.Collections.Generic.List`1[System.String]], 
#	[Up, System.Collections.Generic.List`1[System.String]], 
#	[Right, System.Collections.Generic.List`1[System.String]], 
#	[Down, System.Collections.Generic.List`1[System.String]], 
#	[Select, System.Collections.Generic.List`1[System.String]], 
#	[Print, System.Collections.Generic.List`1[System.String]], 
#	[Execute, System.Collections.Generic.List`1[System.String]], 
#	[PrintScreen, System.Collections.Generic.List`1[System.String]], 
#	[Insert, System.Collections.Generic.List`1[System.String]], 
#	[Delete, System.Collections.Generic.List`1[System.String]], 
#	[Help, System.Collections.Generic.List`1[System.String]], 
#	[D0, System.Collections.Generic.List`1[System.String]], 
#	[D1, System.Collections.Generic.List`1[System.String]], 
#	[D2, System.Collections.Generic.List`1[System.String]], 
#	[D3, System.Collections.Generic.List`1[System.String]], 
#	[D4, System.Collections.Generic.List`1[System.String]], 
#	[D5, System.Collections.Generic.List`1[System.String]], 
#	[D6, System.Collections.Generic.List`1[System.String]], 
#	[D7, System.Collections.Generic.List`1[System.String]], 
#	[D8, System.Collections.Generic.List`1[System.String]], 
#	[D9, System.Collections.Generic.List`1[System.String]], 
#	[A, System.Collections.Generic.List`1[System.String]], 
#	[B, System.Collections.Generic.List`1[System.String]], 
#	[C, System.Collections.Generic.List`1[System.String]], 
#	[D, System.Collections.Generic.List`1[System.String]], 
#	[E, System.Collections.Generic.List`1[System.String]], 
#	[F, System.Collections.Generic.List`1[System.String]], 
#	[G, System.Collections.Generic.List`1[System.String]], 
#	[H, System.Collections.Generic.List`1[System.String]], 
#	[I, System.Collections.Generic.List`1[System.String]], 
#	[J, System.Collections.Generic.List`1[System.String]], 
#	[K, System.Collections.Generic.List`1[System.String]], 
#	[L, System.Collections.Generic.List`1[System.String]], 
#	[M, System.Collections.Generic.List`1[System.String]], 
#	[N, System.Collections.Generic.List`1[System.String]], 
#	[O, System.Collections.Generic.List`1[System.String]], 
#	[P, System.Collections.Generic.List`1[System.String]], 
#	[Q, System.Collections.Generic.List`1[System.String]], 
#	[R, System.Collections.Generic.List`1[System.String]], 
#	[S, System.Collections.Generic.List`1[System.String]], 
#	[T, System.Collections.Generic.List`1[System.String]], 
#	[U, System.Collections.Generic.List`1[System.String]], 
#	[V, System.Collections.Generic.List`1[System.String]], 
#	[W, System.Collections.Generic.List`1[System.String]], 
#	[X, System.Collections.Generic.List`1[System.String]], 
#	[Y, System.Collections.Generic.List`1[System.String]], 
#	[Z, System.Collections.Generic.List`1[System.String]], 
#	[LeftWindows, System.Collections.Generic.List`1[System.String]], 
#	[RightWindows, System.Collections.Generic.List`1[System.String]], 
#	[Apps, System.Collections.Generic.List`1[System.String]], 
#	[Sleep, System.Collections.Generic.List`1[System.String]], 
#	[NumPad0, System.Collections.Generic.List`1[System.String]], 
#	[NumPad1, System.Collections.Generic.List`1[System.String]], 
#	[NumPad2, System.Collections.Generic.List`1[System.String]], 
#	[NumPad3, System.Collections.Generic.List`1[System.String]], 
#	[NumPad4, System.Collections.Generic.List`1[System.String]], 
#	[NumPad5, System.Collections.Generic.List`1[System.String]], 
#	[NumPad6, System.Collections.Generic.List`1[System.String]], 
#	[NumPad7, System.Collections.Generic.List`1[System.String]], 
#	[NumPad8, System.Collections.Generic.List`1[System.String]], 
#	[NumPad9, System.Collections.Generic.List`1[System.String]], 
#	[Multiply, System.Collections.Generic.List`1[System.String]], 
#	[Add, System.Collections.Generic.List`1[System.String]], 
#	[Separator, System.Collections.Generic.List`1[System.String]], 
#	[Subtract, System.Collections.Generic.List`1[System.String]], 
#	[Decimal, System.Collections.Generic.List`1[System.String]], 
#	[Divide, System.Collections.Generic.List`1[System.String]], 
#	[F1, System.Collections.Generic.List`1[System.String]], 
#	[F2, System.Collections.Generic.List`1[System.String]], 
#	[F3, System.Collections.Generic.List`1[System.String]], 
#	[F4, System.Collections.Generic.List`1[System.String]], 
#	[F5, System.Collections.Generic.List`1[System.String]], 
#	[F6, System.Collections.Generic.List`1[System.String]], 
#	[F7, System.Collections.Generic.List`1[System.String]], 
#	[F8, System.Collections.Generic.List`1[System.String]], 
#	[F9, System.Collections.Generic.List`1[System.String]], 
#	[F10, System.Collections.Generic.List`1[System.String]], 
#	[F11, System.Collections.Generic.List`1[System.String]], 
#	[F12, System.Collections.Generic.List`1[System.String]], 
#	[F13, System.Collections.Generic.List`1[System.String]], 
#	[F14, System.Collections.Generic.List`1[System.String]], 
#	[F15, System.Collections.Generic.List`1[System.String]], 
#	[F16, System.Collections.Generic.List`1[System.String]], 
#	[F17, System.Collections.Generic.List`1[System.String]], 
#	[F18, System.Collections.Generic.List`1[System.String]], 
#	[F19, System.Collections.Generic.List`1[System.String]], 
#	[F20, System.Collections.Generic.List`1[System.String]], 
#	[F21, System.Collections.Generic.List`1[System.String]], 
#	[F22, System.Collections.Generic.List`1[System.String]], 
#	[F23, System.Collections.Generic.List`1[System.String]], 
#	[F24, System.Collections.Generic.List`1[System.String]], 
#	[NumLock, System.Collections.Generic.List`1[System.String]], 
#	[Scroll, System.Collections.Generic.List`1[System.String]], 
#	[LeftShift, System.Collections.Generic.List`1[System.String]], 
#	[RightShift, System.Collections.Generic.List`1[System.String]], 
#	[LeftControl, System.Collections.Generic.List`1[System.String]], 
#	[RightControl, System.Collections.Generic.List`1[System.String]], 
#	[LeftAlt, System.Collections.Generic.List`1[System.String]], 
#	[RightAlt, System.Collections.Generic.List`1[System.String]], 
#	[BrowserBack, System.Collections.Generic.List`1[System.String]], 
#	[BrowserForward, System.Collections.Generic.List`1[System.String]], 
#	[BrowserRefresh, System.Collections.Generic.List`1[System.String]], 
#	[BrowserStop, System.Collections.Generic.List`1[System.String]], 
#	[BrowserSearch, System.Collections.Generic.List`1[System.String]], 
#	[BrowserFavorites, System.Collections.Generic.List`1[System.String]], 
#	[BrowserHome, System.Collections.Generic.List`1[System.String]], 
#	[VolumeMute, System.Collections.Generic.List`1[System.String]], 
#	[VolumeDown, System.Collections.Generic.List`1[System.String]], 
#	[VolumeUp, System.Collections.Generic.List`1[System.String]], 
#	[MediaNextTrack, System.Collections.Generic.List`1[System.String]], 
#	[MediaPreviousTrack, System.Collections.Generic.List`1[System.String]], 
#	[MediaStop, System.Collections.Generic.List`1[System.String]], 
#	[MediaPlayPause, System.Collections.Generic.List`1[System.String]], 
#	[LaunchMail, System.Collections.Generic.List`1[System.String]], 
#	[SelectMedia, System.Collections.Generic.List`1[System.String]], 
#	[LaunchApplication1, System.Collections.Generic.List`1[System.String]], 
#	[LaunchApplication2, System.Collections.Generic.List`1[System.String]], 
#	[OemSemicolon, System.Collections.Generic.List`1[System.String]], 
#	[OemPlus, System.Collections.Generic.List`1[System.String]], 
#	[OemComma, System.Collections.Generic.List`1[System.String]], 
#	[OemMinus, System.Collections.Generic.List`1[System.String]], 
#	[OemPeriod, System.Collections.Generic.List`1[System.String]], 
#	[OemQuestion, System.Collections.Generic.List`1[System.String]], 
#	[OemTilde, System.Collections.Generic.List`1[System.String]], 
#	[ChatPadGreen, System.Collections.Generic.List`1[System.String]], 
#	[ChatPadOrange, System.Collections.Generic.List`1[System.String]], 
#	[OemOpenBrackets, System.Collections.Generic.List`1[System.String]], 
#	[OemPipe, System.Collections.Generic.List`1[System.String]], 
#	[OemCloseBrackets, System.Collections.Generic.List`1[System.String]], 
#	[OemQuotes, System.Collections.Generic.List`1[System.String]], 
#	[Oem8, System.Collections.Generic.List`1[System.String]], 
#	[OemBackslash, System.Collections.Generic.List`1[System.String]], 
#	[ProcessKey, System.Collections.Generic.List`1[System.String]], 
#	[OemCopy, System.Collections.Generic.List`1[System.String]], 
#	[OemAuto, System.Collections.Generic.List`1[System.String]], 
#	[OemEnlW, System.Collections.Generic.List`1[System.String]], 
#	[Attn, System.Collections.Generic.List`1[System.String]], 
#	[Crsel, System.Collections.Generic.List`1[System.String]], 
#	[Exsel, System.Collections.Generic.List`1[System.String]], 
#	[EraseEof, System.Collections.Generic.List`1[System.String]], 
#	[Play, System.Collections.Generic.List`1[System.String]], 
#	[Zoom, System.Collections.Generic.List`1[System.String]], 
#	[Pa1, System.Collections.Generic.List`1[System.String]], 
#	[OemClear, System.Collections.Generic.List`1[System.String]], 
#	[MouseLeft, System.Collections.Generic.List`1[System.String]], 
#	[MouseRight, System.Collections.Generic.List`1[System.String]], 
#	[MouseMiddle, System.Collections.Generic.List`1[System.String]], 
#	[MouseX1, System.Collections.Generic.List`1[System.String]], 
#	[MouseX2, System.Collections.Generic.List`1[System.String]], 
#	[DPadUp, System.Collections.Generic.List`1[System.String]], 
#	[DPadDown, System.Collections.Generic.List`1[System.String]], 
#	[DPadLeft, System.Collections.Generic.List`1[System.String]], 
#	[DPadRight, System.Collections.Generic.List`1[System.String]], 
#	[ControllerStart, System.Collections.Generic.List`1[System.String]], 
#	[ControllerBack, System.Collections.Generic.List`1[System.String]], 
#	[LeftStick, System.Collections.Generic.List`1[System.String]], 
#	[RightStick, System.Collections.Generic.List`1[System.String]], 
#	[LeftShoulder, System.Collections.Generic.List`1[System.String]], 
#	[RightShoulder, System.Collections.Generic.List`1[System.String]], 
#	[BigButton, System.Collections.Generic.List`1[System.String]], 
#	[ControllerA, System.Collections.Generic.List`1[System.String]], 
#	[ControllerB, System.Collections.Generic.List`1[System.String]], 
#	[ControllerX, System.Collections.Generic.List`1[System.String]], 
#	[ControllerY, System.Collections.Generic.List`1[System.String]], 
#	[LeftThumbstickLeft, System.Collections.Generic.List`1[System.String]], 
#	[RightTrigger, System.Collections.Generic.List`1[System.String]], 
#	[LeftTrigger, System.Collections.Generic.List`1[System.String]], 
#	[RightThumbstickUp, System.Collections.Generic.List`1[System.String]], 
#	[RightThumbstickDown, System.Collections.Generic.List`1[System.String]], 
#	[RightThumbstickRight, System.Collections.Generic.List`1[System.String]], 
#	[RightThumbstickLeft, System.Collections.Generic.List`1[System.String]], 
#	[LeftThumbstickUp, System.Collections.Generic.List`1[System.String]], 
#	[LeftThumbstickDown, System.Collections.Generic.List`1[System.String]], 
#	[LeftThumbstickRight, System.Collections.Generic.List`1[System.String]]
# ]
ToggleButton = "F11"
# The preferred maximum texture edge length, if allowed by the hardware
PreferredMaxTextureDimension = 16384
ShowIntroMessage = false
# If the data cache is preferred to be elsewhere, it can be set here
DataStoreOverride = ""

	[Config.WatchDog]
	# Should the watchdog be enabled?
	Enabled = false
	# What should the default sleep interval be (in milliseconds)?
	DefaultSleepInterval = 5000
	# What should the short sleep interval be (in milliseconds)?
	ShortSleepInterval = 500
	# What should the interrupt interval be (in milliseconds)?
	InterruptInterval = 10000

	[Config.Garbage]
	# Should unowned textures be marked in the garbage collector's statistics?
	CollectAccountUnownedTextures = false
	# Should owned textures be marked in the garbage collector's statistics?
	CollectAccountOwnedTextures = false
	# The amount of free memory required by SM after which it triggers recovery operations
	RequiredFreeMemory = 128
	# Hysterisis applied to RequiredFreeMemory
	RequiredFreeMemoryHysterisis = 1.5
	# Should sprites containing season names be purged on a seasonal basis?
	SeasonalPurge = true
	# What runtime garbage collection latency mode should be set?
	# Legal Values: [
	#	[Batch, System.Collections.Generic.List`1[System.String]], 
	#	[Interactive, System.Collections.Generic.List`1[System.String]], 
	#	[LowLatency, System.Collections.Generic.List`1[System.String]], 
	#	[SustainedLowLatency, System.Collections.Generic.List`1[System.String]], 
	#	[NoGCRegion, System.Collections.Generic.List`1[System.String]]
	# ]
	LatencyMode = "SustainedLowLatency"

		[Config.Debug.Logging]
		# Legal Values: [
		#	[Trace, System.Collections.Generic.List`1[System.String]], 
		#	[Debug, System.Collections.Generic.List`1[System.String]], 
		#	[Info, System.Collections.Generic.List`1[System.String]], 
		#	[Warn, System.Collections.Generic.List`1[System.String]], 
		#	[Error, System.Collections.Generic.List`1[System.String]], 
		#	[Alert, System.Collections.Generic.List`1[System.String]]
		# ]
		LogLevel = "Trace"

	[Config.DrawState]
	# Enable linear sampling for sprites
	SetLinear = true
	# How many MSAA samples should be used?
	MSAASamples = 0
	# Disable the depth buffer (unused in this game)
	DisableDepthBuffer = false
	# The default backbuffer format to request
	# Legal Values: [
	#	[Color, System.Collections.Generic.List`1[System.String]], 
	#	[Bgr565, System.Collections.Generic.List`1[System.String]], 
	#	[Bgra5551, System.Collections.Generic.List`1[System.String]], 
	#	[Bgra4444, System.Collections.Generic.List`1[System.String]], 
	#	[Dxt1, System.Collections.Generic.List`1[System.String]], 
	#	[Dxt3, System.Collections.Generic.List`1[System.String]], 
	#	[Dxt5, System.Collections.Generic.List`1[System.String]], 
	#	[NormalizedByte2, System.Collections.Generic.List`1[System.String]], 
	#	[NormalizedByte4, System.Collections.Generic.List`1[System.String]], 
	#	[Rgba1010102, System.Collections.Generic.List`1[System.String]], 
	#	[Rg32, System.Collections.Generic.List`1[System.String]], 
	#	[Rgba64, System.Collections.Generic.List`1[System.String]], 
	#	[Alpha8, System.Collections.Generic.List`1[System.String]], 
	#	[Single, System.Collections.Generic.List`1[System.String]], 
	#	[Vector2, System.Collections.Generic.List`1[System.String]], 
	#	[Vector4, System.Collections.Generic.List`1[System.String]], 
	#	[HalfSingle, System.Collections.Generic.List`1[System.String]], 
	#	[HalfVector2, System.Collections.Generic.List`1[System.String]], 
	#	[HalfVector4, System.Collections.Generic.List`1[System.String]], 
	#	[HdrBlendable, System.Collections.Generic.List`1[System.String]], 
	#	[Bgr32, System.Collections.Generic.List`1[System.String]], 
	#	[Bgra32, System.Collections.Generic.List`1[System.String]], 
	#	[ColorSRgb, System.Collections.Generic.List`1[System.String]], 
	#	[Bgr32SRgb, System.Collections.Generic.List`1[System.String]], 
	#	[Bgra32SRgb, System.Collections.Generic.List`1[System.String]], 
	#	[Dxt1SRgb, System.Collections.Generic.List`1[System.String]], 
	#	[Dxt3SRgb, System.Collections.Generic.List`1[System.String]], 
	#	[Dxt5SRgb, System.Collections.Generic.List`1[System.String]], 
	#	[RgbPvrtc2Bpp, System.Collections.Generic.List`1[System.String]], 
	#	[RgbPvrtc4Bpp, System.Collections.Generic.List`1[System.String]], 
	#	[RgbaPvrtc2Bpp, System.Collections.Generic.List`1[System.String]], 
	#	[RgbaPvrtc4Bpp, System.Collections.Generic.List`1[System.String]], 
	#	[RgbEtc1, System.Collections.Generic.List`1[System.String]], 
	#	[Dxt1a, System.Collections.Generic.List`1[System.String]], 
	#	[RgbaAtcExplicitAlpha, System.Collections.Generic.List`1[System.String]], 
	#	[RgbaAtcInterpolatedAlpha, System.Collections.Generic.List`1[System.String]], 
	#	[Rgb8Etc2, System.Collections.Generic.List`1[System.String]], 
	#	[Srgb8Etc2, System.Collections.Generic.List`1[System.String]], 
	#	[Rgb8A1Etc2, System.Collections.Generic.List`1[System.String]], 
	#	[Srgb8A1Etc2, System.Collections.Generic.List`1[System.String]], 
	#	[Rgba8Etc2, System.Collections.Generic.List`1[System.String]], 
	#	[SRgb8A8Etc2, System.Collections.Generic.List`1[System.String]]
	# ]
	BackbufferFormat = "Color"
	# The default HDR backbuffer format to request
	# Legal Values: [
	#	[Color, System.Collections.Generic.List`1[System.String]], 
	#	[Bgr565, System.Collections.Generic.List`1[System.String]], 
	#	[Bgra5551, System.Collections.Generic.List`1[System.String]], 
	#	[Bgra4444, System.Collections.Generic.List`1[System.String]], 
	#	[Dxt1, System.Collections.Generic.List`1[System.String]], 
	#	[Dxt3, System.Collections.Generic.List`1[System.String]], 
	#	[Dxt5, System.Collections.Generic.List`1[System.String]], 
	#	[NormalizedByte2, System.Collections.Generic.List`1[System.String]], 
	#	[NormalizedByte4, System.Collections.Generic.List`1[System.String]], 
	#	[Rgba1010102, System.Collections.Generic.List`1[System.String]], 
	#	[Rg32, System.Collections.Generic.List`1[System.String]], 
	#	[Rgba64, System.Collections.Generic.List`1[System.String]], 
	#	[Alpha8, System.Collections.Generic.List`1[System.String]], 
	#	[Single, System.Collections.Generic.List`1[System.String]], 
	#	[Vector2, System.Collections.Generic.List`1[System.String]], 
	#	[Vector4, System.Collections.Generic.List`1[System.String]], 
	#	[HalfSingle, System.Collections.Generic.List`1[System.String]], 
	#	[HalfVector2, System.Collections.Generic.List`1[System.String]], 
	#	[HalfVector4, System.Collections.Generic.List`1[System.String]], 
	#	[HdrBlendable, System.Collections.Generic.List`1[System.String]], 
	#	[Bgr32, System.Collections.Generic.List`1[System.String]], 
	#	[Bgra32, System.Collections.Generic.List`1[System.String]], 
	#	[ColorSRgb, System.Collections.Generic.List`1[System.String]], 
	#	[Bgr32SRgb, System.Collections.Generic.List`1[System.String]], 
	#	[Bgra32SRgb, System.Collections.Generic.List`1[System.String]], 
	#	[Dxt1SRgb, System.Collections.Generic.List`1[System.String]], 
	#	[Dxt3SRgb, System.Collections.Generic.List`1[System.String]], 
	#	[Dxt5SRgb, System.Collections.Generic.List`1[System.String]], 
	#	[RgbPvrtc2Bpp, System.Collections.Generic.List`1[System.String]], 
	#	[RgbPvrtc4Bpp, System.Collections.Generic.List`1[System.String]], 
	#	[RgbaPvrtc2Bpp, System.Collections.Generic.List`1[System.String]], 
	#	[RgbaPvrtc4Bpp, System.Collections.Generic.List`1[System.String]], 
	#	[RgbEtc1, System.Collections.Generic.List`1[System.String]], 
	#	[Dxt1a, System.Collections.Generic.List`1[System.String]], 
	#	[RgbaAtcExplicitAlpha, System.Collections.Generic.List`1[System.String]], 
	#	[RgbaAtcInterpolatedAlpha, System.Collections.Generic.List`1[System.String]], 
	#	[Rgb8Etc2, System.Collections.Generic.List`1[System.String]], 
	#	[Srgb8Etc2, System.Collections.Generic.List`1[System.String]], 
	#	[Rgb8A1Etc2, System.Collections.Generic.List`1[System.String]], 
	#	[Srgb8A1Etc2, System.Collections.Generic.List`1[System.String]], 
	#	[Rgba8Etc2, System.Collections.Generic.List`1[System.String]], 
	#	[SRgb8A8Etc2, System.Collections.Generic.List`1[System.String]]
	# ]
	BackbufferHDRFormat = "Rgba64"
	# Should the system HDR settings be honored?
	HonorHDRSettings = true

	[Config.Performance]
	# Perform a Generation 0 and 1 garbage collection pass every N ticks (if <= 0, disabled)
	TransientGCTickCount = 150

	[Config.Resample]
	# Should resampling be enabled?
	Enabled = true
	# Should texture rescaling be enabled?
	Scale = true
	# What scaling algorithm should be used by default?
	# Legal Values: [
	#	[xBRZ, System.Collections.Generic.List`1[System.String]], 
	#	[SuperXBR, System.Collections.Generic.List`1[System.String]], 
	#	[EPX, System.Collections.Generic.List`1[System.String]], 
	#	[Bilinear, System.Collections.Generic.List`1[System.String]], 
	#	[None, System.Collections.Generic.List`1[System.String]]
	# ]
	Scaler = "xBRZ"
	# What scaling algorithm should be used for gradient sprites?
	# Legal Values: [
	#	[xBRZ, System.Collections.Generic.List`1[System.String]], 
	#	[SuperXBR, System.Collections.Generic.List`1[System.String]], 
	#	[EPX, System.Collections.Generic.List`1[System.String]], 
	#	[Bilinear, System.Collections.Generic.List`1[System.String]], 
	#	[None, System.Collections.Generic.List`1[System.String]]
	# ]
	ScalerGradient = "None"
	# Should dynamic scaling be used (scaling based upon apparent sprite size)
	EnableDynamicScale = true
	# Should we assume that input sprites are gamma corrected?
	AssumeGammaCorrected = true
	# Maximum scale factor of sprites (clamped to chosen scaler)
	MaxScale = 4294967295
	# Minimum edge length of a sprite to be considered for resampling
	MinimumTextureDimensions = 1
	# Should wrapped addressing be enabled for sprite resampling (when analysis suggests it)?
	EnableWrappedAddressing = false
	# Should resampling be stalled if it is determined that it will cause hitches?
	UseFrametimeStalling = true
	# Should color enhancement/rebalancing be performed?
	UseColorEnhancement = true
	# Should transparent pixels be premultiplied to prevent a 'halo' effect?
	PremultiplyAlpha = true
	# Low pass value that should be filtered when reversing premultiplied alpha.
	PremultiplicationLowPass = 1024
	# Use redmean algorithm for perceptual color comparisons?
	UseRedmean = false
	# What textures are drawn in 'slices' and thus should be special-cased to be resampled as one texture?
	SlicedTextures = [
		"LooseSprites\\Cursors::0,2000:640,256", 
		"LooseSprites\\Cloudy_Ocean_BG", 
		"LooseSprites\\Cloudy_Ocean_BG_Night", 
		"LooseSprites\\stardewPanorama", 
		"Maps\\nightSceneMaru", 
		"Maps\\nightSceneMaruTrees", 
		"Maps\\sebastianMountainTiles", 
		"Maps\\sebastianRideTiles", 
		"Tilesheets\\GuntherExpedition2_Shadows", 
		"Tilesheets\\Highlands_Fog", 
		"Tilesheets\\Highlands_FogBackground"
	]
	# What textures or spritesheets use 4xblock sizes?
	TwoXTextures = [
		"Maps\\WoodBuildings"
	]
	# What textures or spritesheets use 4xblock sizes?
	FourXTextures = [
		"Characters\\Monsters\\Crow", 
		"Characters\\femaleRival", 
		"Characters\\maleRival", 
		"LooseSprites\\Bat", 
		"LooseSprites\\buildingPlacementTiles", 
		"LooseSprites\\chatBox", 
		"LooseSprites\\daybg", 
		"LooseSprites\\DialogBoxGreen", 
		"LooseSprites\\hoverBox", 
		"LooseSprites\\nightbg", 
		"LooseSprites\\robinAtWork", 
		"LooseSprites\\skillTitles", 
		"LooseSprites\\textBox", 
		"Maps\\busPeople", 
		"Maps\\cavedarker", 
		"Maps\\FarmhouseTiles", 
		"Maps\\GreenHouseInterior", 
		"Maps\\MenuTiles", 
		"Maps\\MenuTilesUncolored", 
		"Maps\\spring_BusStop", 
		"Maps\\TownIndoors", 
		"TerrainFeatures\\BuffsIcons", 
		"TerrainFeatures\\DiggableWall_basic", 
		"TerrainFeatures\\DiggableWall_basic_dark", 
		"TerrainFeatures\\DiggableWall_frost", 
		"TerrainFeatures\\DiggableWall_frost_dark", 
		"TerrainFeatures\\DiggableWall_lava", 
		"TerrainFeatures\\DiggableWall_lava_dark", 
		"TerrainFeatures\\Stalagmite", 
		"TerrainFeatures\\Stalagmite_Frost", 
		"TerrainFeatures\\Stalagmite_Lava", 
		"TileSheets\\Fireball", 
		"TileSheets\\rain", 
		"TileSheets\\animations"
	]
	# What spritesheets will absolutely not be resampled or processed?
	Blacklist = [
		"LooseSprites\\Lighting\\", 
		"@^Maps\\\\.+Mist", 
		"@^Maps\\\\.+mist", 
		"@^Maps\\\\.+Shadow", 
		"@^Maps\\\\.+Shadows", 
		"@^Maps\\\\.+Fog", 
		"@^Maps\\\\.+FogBackground"
	]
	# What spritesheets will absolutely not be treated as gradients?
	GradientBlacklist = [
		"TerrainFeatures\\hoeDirt"
	]

		[Config.Resample.BlockMultipleAnalysis]
		# Should sprites be analyzed to see if they are block multiples?
		Enabled = true
		# What threshold should be used for block multiple analysis?
		EqualityThreshold = 1
		# How many blocks can be different for the test to still pass?
		MaxInequality = 1

		[Config.Resample.Analysis]
		# Max color difference to not consider a sprite to be a gradient?
		MaxGradientColorDifference = 38
		# Minimum different shades required (per channel) for a sprite to be a gradient?
		MinimumGradientShades = 2
		# Use redmean algorithm for perceptual color comparisons?
		UseRedmean = true
		# Experimental resample-based recolor support
		[Config.Resample.Recolor]
		# Should (experimental) resample-based recoloring be enabled?
		Enabled = false
		RScalar = 0.8976420000000001
		GScalar = 0.998476
		BScalar = 1.18365

		[Config.Resample.BlockCompression]
		# Should block compression of sprites be enabled?
		Enabled = true
		# What quality level should be used?
		# Legal Values: [
		#	[Fastest, System.Collections.Generic.List`1[System.String]], 
		#	[Normal, System.Collections.Generic.List`1[System.String]], 
		#	[Production, System.Collections.Generic.List`1[System.String]], 
		#	[Highest, System.Collections.Generic.List`1[System.String]]
		# ]
		Quality = "Highest"
		# What alpha deviation threshold should be applied to determine if a sprite's transparency is smooth or mask-like (determines between bc2 and bc3)?
		HardAlphaDeviationThreshold = 7

		[Config.Resample.Padding]
		# Should padding be applied to sprites to allow resampling to extend beyond the natural sprite boundaries?
		Enabled = true
		# What is the minimum edge size of a sprite for padding to be enabled?
		MinimumSizeTexels = 4
		# Should unknown (unnamed) sprites be ignored by the padding system?
		IgnoreUnknown = false
		# Should solid edges be padded?
		PadSolidEdges = false
		# What spritesheets should not be padded?
		BlackList = [
			"LooseSprites\\Cursors::256,308:50,34"
		]
		# What spritesheets should have a stricter edge-detection algorithm applied?
		StrictList = [
			"LooseSprites\\Cursors"
		]
		# What spritesheets should always be padded?
		AlwaysList = [
			"LooseSprites\\font_bold", 
			"Characters\\Farmer\\hairstyles", 
			"Characters\\Farmer\\hairstyles2", 
			"Characters\\Farmer\\hats", 
			"Characters\\Farmer\\pants", 
			"Characters\\Farmer\\shirts", 
			"TileSheets\\weapons", 
			"TileSheets\\bushes", 
			"TerrainFeatures\\grass", 
			"TileSheets\\debris", 
			"TileSheets\\animations", 
			"Maps\\springobjects", 
			"Maps\\summerobjects", 
			"Maps\\winterobjects", 
			"Maps\\fallobjects", 
			"Buildings\\houses", 
			"TileSheets\\furniture", 
			"TerrainFeatures\\tree1_spring", 
			"TerrainFeatures\\tree2_spring", 
			"TerrainFeatures\\tree3_spring", 
			"TerrainFeatures\\tree1_summer", 
			"TerrainFeatures\\tree2_summer", 
			"TerrainFeatures\\tree3_summer", 
			"TerrainFeatures\\tree1_fall", 
			"TerrainFeatures\\tree2_fall", 
			"TerrainFeatures\\tree3_fall", 
			"TerrainFeatures\\tree1_winter", 
			"TerrainFeatures\\tree2_winter", 
			"TerrainFeatures\\tree3_winter"
		]

		[Config.Resample.xBRZ]
		# The weight provided to luminance as opposed to chrominance when performing color comparisons
		LuminanceWeight = 1
		# The tolerance for colors to be considered equal - [0, 256)
		EqualColorTolerance = 20
		# The threshold for a corner-direction to be considered 'dominant'
		DominantDirectionThreshold = 4.4
		# The threshold for a corner-direction to be considered 'steep'
		SteepDirectionThreshold = 2.2
		# Bias towards kernel center applied to corner-direction calculations
		CenterDirectionBias = 3
		# Should gradient block copies be used? (Note: Very Broken)
		UseGradientBlockCopy = false

	[Config.WrapDetection]
	# What is the threshold percentage of alpha values to be used to determine if it is a wrapping edge?
	edgeThreshold = 0.2000000029802322
	# What is the minimum alpha value assumed to be opaque?
	alphaThreshold = 1

	[Config.AsyncScaling]
	# Should asynchronous scaling be enabled for unknown textures?
	EnabledForUnknownTextures = true
	# Should synchronous stores always be used?
	ForceSynchronousStores = true
	# Should synchronous stores be throttled?
	ThrottledSynchronousLoads = true
	# Should we fetch and load texture data within the same frame?
	CanFetchAndLoadSameFrame = true

	[Config.MemoryCache]
	# Should the memory cache be enabled?
	Enabled = true
	# Should memory cache elements always be flushed upon update?
	AlwaysFlush = false

	[Config.SuspendedCache]
	# Should the suspended sprite cache be enabled?
	Enabled = true

	[Config.SMAPI]
	# Should the experimental SMAPI texture cache patch be enabled?
	TextureCacheEnabled = true
	# Should the PMA texture cache be enabled?
	PMATextureCacheEnabled = true
	# Should the experimental SMAPI texture cache have high memory usage enabled?
	# Unrecommended: This results in the game's texture being retained (and thus loaded faster) but doesn't suspend the resampled sprite instances.
	TextureCacheHighMemoryEnabled = false
	# Should the ApplyPatch method be patched?
	ApplyPatchEnabled = true
	# Should ApplyPatch pin temporary memory?
	ApplyPatchPinMemory = false
	# Should 'GetData' be patched to use SM caches?
	ApplyGetDataPatch = true

	[Config.Extras]
	# Should the game have 'fast quitting' enabled?
	FastQuit = false
	# Should line drawing be smoothed?
	SmoothLines = true
	# Should Harmony patches have inlining re-enabled?
	HarmonyInlining = false
	# Should the game's 'parseMasterSchedule' method be fixed and optimized?
	FixMasterSchedule = true
	# Should NPC Warp Points code be optimized?
	OptimizeWarpPoints = true
	# Should NPCs take true shortest paths?
	TrueShortestPath = false
	# Allow NPCs onto the farm?
	AllowNPCsOnFarm = false
	# Should the default batch sort be replaced with a stable sort?
	StableSort = true
	# Should the game be prevented from going 'unresponsive' during loads?
	PreventUnresponsive = true
	# Should the engine's deferred thread task runner be optimized?
	OptimizeEngineTaskRunner = true

		[Config.Extras.Snow]
		# Should custom snowfall be used during snowstorms?
		Enabled = true
		# Minimum Snow Density
		MinimumDensity = 1024
		# Maximum Snow Density
		MaximumDensity = 3072
		# Maximum Snow Rotation Speed
		MaximumRotationSpeed = 0.01666666666666667
		# Maximum Snow Scale
		MaximumScale = 3
		# Puffersnow Chance
		PuffersnowChance = -1

		[Config.Extras.ModPatches]
		# Patch CustomNPCFixes in order to improve load times?
		PatchCustomNPCFixes = false
		# Disable PyTK mitigation for SpriteMaster?
		DisablePyTKMitigation = true

	[Config.FileCache]
	# Should the file cache be enabled?
	Enabled = true
	# What compression algorithm should be used?
	# Legal Values: [
	#	[None, System.Collections.Generic.List`1[System.String]], 
	#	[Compress, System.Collections.Generic.List`1[System.String]], 
	#	[Deflate, System.Collections.Generic.List`1[System.String]], 
	#	[LZMA, System.Collections.Generic.List`1[System.String]], 
	#	[Zstd, System.Collections.Generic.List`1[System.String]]
	# ]
	Compress = "Zstd"
	# Should files be compressed regardless of if it would be beneficial?
	ForceCompress = false
	# Should system compression (such as NTFS compression) be preferred?
	PreferSystemCompression = false
