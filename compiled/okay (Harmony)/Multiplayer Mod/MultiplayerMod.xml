<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MultiplayerMod</name>
    </assembly>
    <members>
        <member name="T:MultiplayerMod.Framework.Network.SLidgrenClient">
            <summary>A multiplayer client used to connect to a hosted server. This is an implementation of <see cref="T:MultiplayerMod.Framework.Network.LidgrenClient"/> with callbacks for SMAPI functionality.</summary>
        </member>
        <member name="F:MultiplayerMod.Framework.Network.SLidgrenClient.OnProcessingMessage">
            <summary>A callback to raise when receiving a message. This receives the incoming message, a method to send an arbitrary message, and a callback to run the default logic.</summary>
        </member>
        <member name="F:MultiplayerMod.Framework.Network.SLidgrenClient.OnSendingMessage">
            <summary>A callback to raise when sending a message. This receives the outgoing message, a method to send an arbitrary message, and a callback to resume the default logic.</summary>
        </member>
        <member name="M:MultiplayerMod.Framework.Network.SLidgrenClient.#ctor(System.String,System.Action{StardewValley.Network.IncomingMessage,System.Action{StardewValley.Network.OutgoingMessage},System.Action},System.Action{StardewValley.Network.OutgoingMessage,System.Action{StardewValley.Network.OutgoingMessage},System.Action})">
            <summary>Construct an instance.</summary>
            <param name="address">The remote address being connected.</param>
            <param name="onProcessingMessage">A callback to raise when receiving a message. This receives the incoming message, a method to send an arbitrary message, and a callback to run the default logic.</param>
            <param name="onSendingMessage">A callback to raise when sending a message. This receives the outgoing message, a method to send an arbitrary message, and a callback to resume the default logic.</param>
        </member>
        <member name="M:MultiplayerMod.Framework.Network.SLidgrenClient.sendMessage(StardewValley.Network.OutgoingMessage)">
            <summary>Send a message to the connected peer.</summary>
        </member>
        <member name="M:MultiplayerMod.Framework.Network.SLidgrenClient.processIncomingMessage(StardewValley.Network.IncomingMessage)">
            <summary>Process an incoming network message.</summary>
            <param name="message">The message to process.</param>
        </member>
        <member name="T:MultiplayerMod.Framework.Network.SLidgrenServer">
            <summary>A multiplayer server used to connect to an incoming player. This is an implementation of <see cref="T:MultiplayerMod.Framework.Network.LidgrenServer"/> that adds support for SMAPI's metadata context exchange.</summary>
        </member>
        <member name="F:MultiplayerMod.Framework.Network.SLidgrenServer.Multiplayer">
            <summary>SMAPI's implementation of the game's core multiplayer logic.</summary>
        </member>
        <member name="F:MultiplayerMod.Framework.Network.SLidgrenServer.OnProcessingMessage">
            <summary>A callback to raise when receiving a message. This receives the incoming message, a method to send a message, and a callback to run the default logic.</summary>
        </member>
        <member name="M:MultiplayerMod.Framework.Network.SLidgrenServer.#ctor(StardewValley.Network.IGameServer,StardewValley.Multiplayer,System.Action{StardewValley.Network.IncomingMessage,System.Action{StardewValley.Network.OutgoingMessage},System.Action})">
            <summary>Construct an instance.</summary>
            <param name="multiplayer">SMAPI's implementation of the game's core multiplayer logic.</param>
            <param name="gameServer">The underlying game server.</param>
            <param name="onProcessingMessage">A callback to raise when receiving a message. This receives the incoming message, a method to send a message, and a callback to run the default logic.</param>
        </member>
        <member name="M:MultiplayerMod.Framework.Network.SLidgrenServer.parseDataMessageFromClient(Lidgren.Network.NetIncomingMessage)">
            <summary>Parse a data message from a client.</summary>
            <param name="rawMessage">The raw network message to parse.</param>
        </member>
        <member name="T:MultiplayerMod.Framework.Patch.Mobile.SGamePatch">
            <summary>
            Debug class
            </summary>
        </member>
        <member name="M:MultiplayerMod.Framework.Patch.Mobile.SMultiplayerPatch.prefix_InitServer(StardewValley.Network.Server,StardewValley.Network.Server@,StardewValley.Multiplayer)">
            <summary>Initialize a server before the game connects to an incoming player.</summary>
            <param name="server">The server to initialize.</param>
        </member>
        <member name="M:MultiplayerMod.ModEntry.ApplyDebug">
            <summary>
            This is for debugging, never mind it ...
            </summary>
        </member>
    </members>
</doc>
