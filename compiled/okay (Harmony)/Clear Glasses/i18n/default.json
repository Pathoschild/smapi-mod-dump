{
  "advanced_settings": "Advanced Settings",
  "advanced_settings_tooltip": "Click to configure advanced settings",
  ".enabled.name": "Enable Clear Glasses",
  ".enabled.comment": "Should Clear Glasses be enabled? Unsetting this will disable all mod functionality.",
  ".togglebutton.name": "Toggle keybind",
  ".togglebutton.comment": "Key to turn on or off the mod.",
  "resample.title": "Resample",
  "resample.enabled.name": "Enable resampling",
  "resample.enabled.comment": "Should resampling be enabled?",
  "resample.enabledsprites.name": "Sprites",
  "resample.enabledsprites.comment": "Should resampling be enabled for normal sprites?",
  "resample.enabledportraits.name": "Portraits",
  "resample.enabledportraits.comment": "Should resampling be enabled for portraits?",
  "resample.enabledlargetext.name": "Large text",
  "resample.enabledlargetext.comment": "Should resampling be enabled for large text?",
  "resample.enabledsmalltext.name": "Small text",
  "resample.enabledsmalltext.comment": "Should resampling be enabled for small text?",
  "resample.scaler.name": "Scaling algorithm (general)",
  "resample.scaler.comment": "What scaling algorithm should be used by default?",
  "resample.scalerportrait.name": "Scaling algorithm (portrait)",
  "resample.scalerportrait.comment": "What scaling algorithm should be used for portraits?",
  "resample.scalertext.name": "Scaling algorithm (text)",
  "resample.scalertext.comment": "What scaling algorithm should be used for text?",
  "resample.scalergradient.name": "Scaling algorithm (gradients)",
  "resample.scalergradient.comment": "What scaling algorithm should be used for gradient sprites?",
  "resample.minscale.name": "Minimum Scale",
  "resample.minscale.comment": "Minimum scale factor of sprites",
  "resample.maxscale.name": "Maximum Scale",
  "resample.maxscale.comment": "Maximum scale factor of sprites",
  "resample.filters.title": "Colour Filters",
  "resample.filters.enabled.name": "Enable",
  "resample.filters.enabled.comment": "Apply colour filters before resampling takes place.",
  "resample.filters.saturation.name": "Saturation",
  "resample.filters.saturation.comment": "Amount to adjust colour saturation. A value of -100% would be grey, while +100% would be two times as vibrant.",
  "resample.filters.brightness.name": "Brightness",
  "resample.filters.brightness.comment": "Amount to adjust colour brightness. -100 would be black, while 100 is two times brighter.",
  "resample.filters.temperature.name": "Colour Temperature",
  "resample.filters.temperature.comment": "Amount to adjust colour temperature. A negative value would look more blue while a positive value looks more red.",


  ".preferredmaxtexturedimension.name": "Maximum texture dimension",
  ".preferredmaxtexturedimension.comment": "The preferred maximum texture edge length, if allowed by the hardware",
  ".datastoreoverride.name": "Data store directory",
  ".datastoreoverride.comment": "Directory where the cached data is stored",

  "watchdog.title": "Watchdog",
  "watchdog.enabled.name": "Enable",
  "watchdog.enabled.comment": "Should the watchdog be enabled?",
  "watchdog.defaultsleepinterval.name": "Default sleep interval",
  "watchdog.defaultsleepinterval.comment": "In milliseconds",
  "watchdog.shortsleepinterval.name": "Short sleep interval",
  "watchdog.shortsleepinterval.comment": "In milliseconds",
  "watchdog.interruptinterval.name": "Interrupt interval",
  "watchdog.interruptinterval.comment": "In milliseconds",

  "garbage.title": "Garbage Collection",
  "garbage.collectaccountunownedtextures.name": "Track unowned textures",
  "garbage.collectaccountunownedtextures.comment": "Account for unowned textures in garbage collection statistics",
  "garbage.collectaccountownedtextures.name": "Track owned textures",
  "garbage.collectaccountownedtextures.comment": "Account for owned textures in garbage collection statistics",
  "garbage.shouldcollectaccountownedtextures.name": "Should clean up owned textures",
  "garbage.requiredfreememoryhard.name": "Required free memory (hard)",
  "garbage.requiredfreememoryhard.comment": "Free memory required after a hard recovery operation",
  "garbage.requiredfreememorysoft.name": "Required free memory (soft)",
  "garbage.requiredfreememorysoft.comment": "Free memory required after a soft recovery operation",
  "garbage.requiredfreememoryhysteresis.name": "Free memory multiplier",
  "garbage.requiredfreememoryhysteresis.comment": "Multiplier (hysteresis) applied to required free memory",
  "garbage.seasonalpurge.name": "Purge seasonal sprites",
  "garbage.seasonalpurge.comment": "Purge sprites that contain season names after a season ends",
  "garbage.latencymode.name": "Latency mode",
  "garbage.latencymode.comment": "What latency mode to use for garbage collection",
  "garbage.ephemeralcollectperiod.name": "Ephemeral collect period",
  "garbage.ephemeralcollectperiod.comment": "Perform an ephemeral garbage collection pass every period in milliseconds. Disabled if set to 0.",
  "garbage.ephemeralcollectpausegoal.name": "Ephemeral collect goal",
  "garbage.ephemeralcollectpausegoal.comment": "Ephemeral garbage collection pause period goal in milliseconds",

  "debug.title": "Debug",
  "debug.displayframetime.name": "Show frame time",
  "debug.displayframetime.comment": "Display a frame time counter",
  "debug.logging.title": "Logging",
  "debug.logging.loglevel.name": "Log level",

  "drawstate.title": "Draw state",
  "drawstate.setlinear.name": "Linear for sampled sprites",
  "drawstate.setlinear.comment": "Use linear sampling for sprites",
  "drawstate.setlinearunresampled.name": "Linear for unresampled sprites",
  "drawstate.setlinearunresampled.comment": "Use linear sampling for unresampled sprites",
  "drawstate.antialiasingsamples.name": "MSAA",
  "drawstate.antialiasingsamples.comment": "Number of samples to use for MSAA anti-aliasing",
  "drawstate.disabledepthbuffer.name": "Disable depth buffer",
  "drawstate.disabledepthbuffer.comment": "Depth buffer is unused",
  "drawstate.backbufferformat.name": "Backbuffer format",
  "drawstate.backbufferformat.comment": "The default backbuffer format to request",
  "drawstate.backbufferhdrformat.name": "Backbuffer HDR format",
  "drawstate.backbufferhdrformat.comment": "The default backbuffer HDR format to request",
  "drawstate.honorhdrsettings.name": "Use system HDR setting",
  "drawstate.honorhdrsettings.comment": "Should the system HDR setting be honoured?",

  "resample.scale.name": "Scale adjustment",
  "resample.scale.comment": "Scale a texture if its scaled dimensions exceed preferred dimensions",
  "resample.enabledynamicscale.name": "Enable dynamic scale",
  "resample.enabledynamicscale.comment": "Scale sprite based on drawn size and not texture size",
  "resample.trimexcesstransparency.name": "Remove excess transparency",
  "resample.trimexcesstransparency.comment": "Trim excess transparent rows and columns?",
  "resample.assumegammacorrected.name": "Assume gamma corrected",
  "resample.assumegammacorrected.comment": "Assume that sprite textures are already gamma corrected",
  "resample.overscale.name": "Overscale",
  "resample.overscale.comment": "Additional scale factor added to calculated scale",
  "resample.forceoverscaling.name": "Force overscale",
  "resample.forceoverscaling.comment": "Always rescale sprites that are already at their render size.",
  "resample.minimumtexturedimensions.name": "Min texture size",
  "resample.minimumtexturedimensions.comment": "Minimum edge length of a sprite to be considered for resampling",
  "resample.enablewrappedaddressing.name": "Enable wrapped addressing",
  "resample.enablewrappedaddressing.comment": "Should wrapped addressing be enabled for sprite resampling when analysis suggests it?",
  "resample.useframetimestalling.name": "Use frame time stalling",
  "resample.useframetimestalling.comment": "Should resampling be stalled if it is determined that it will cause hitches?",
  "resample.usecolorenhancement.name": "Use colour enhancement",
  "resample.usecolorenhancement.comment": "Should color enhancement/rebalancing be performed?",
  "resample.premultiplyalpha.name": "Premultiply transparent",
  "resample.premultiplyalpha.comment": "Mask transparent pixels to prevent halo effect",
  "resample.premultiplicationlowpass.name": "Low pass filter threshold",
  "resample.premultiplicationlowpass.comment": "Low pass value that should be filtered when reversing premultiplied alpha.",
  "resample.useredmean.name": "Redmean colour distance",
  "resample.useredmean.comment": "Use redmean algorithm for perceptual colour comparisons instead of YCbCr",

  "resample.blockmultipleanalysis.title": "Block-Multiple Analysis",
  "resample.blockmultipleanalysis.enabled.name": "Enable",
  "resample.blockmultipleanalysis.enabled.comment": "Should sprites be analyzed to see if they are block multiples?",
  "resample.blockmultipleanalysis.equalitythreshold.name": "Equality threshold",
  "resample.blockmultipleanalysis.equalitythreshold.comment": "Equality threshold",
  "resample.blockmultipleanalysis.maxinequality.name": "Maximum inequality",
  "resample.blockmultipleanalysis.maxinequality.comment": "How many blocks can be different for the test to still pass?",

  "resample.analysis.title": "Analysis",
  "resample.analysis.maxgradientcolordifference.name": "Max gradient colour difference",
  "resample.analysis.maxgradientcolordifference.comment": "Max colour difference to not consider a sprite to be a gradient.",
  "resample.analysis.minimumgradientshades.name": "Min gradient shades",
  "resample.analysis.minimumgradientshades.comment": "Minimum different shades required (per channel) for a sprite to be a gradient?",
  "resample.analysis.maximumgradientopaqueproportion.name": "Max gradient opaque proportion",
  "resample.analysis.maximumgradientopaqueproportion.comment": "Max proportion of opaque pixels for a sprite to be a gradient",
  "resample.analysis.minimumpremultipliedopaqueproportion.name": "Min premultiplied opaque proportion",
  "resample.analysis.minimumpremultipliedopaqueproportion.comment": "Minimum proportion of opaque texels for a sprite to be premultiplied?",

  "resample.deposterization.title": "Deposterization",
  "resample.deposterization.preenabled.name": "Enable pre-pass",
  "resample.deposterization.preenabled.comment": "Perform deposterization pre-pass",
  "resample.deposterization.postenabled.name": "Enable post-pass",
  "resample.deposterization.postenabled.comment": "Perform deposterization post-pass",
  "resample.deposterization.threshold.name": "Threshold",
  "resample.deposterization.threshold.comment": "Deposterization Colour Threshold",
  "resample.deposterization.blocksize.name": "Block size",
  "resample.deposterization.blocksize.comment": "Deposterization block size",
  "resample.deposterization.passes.name": "Passes",
  "resample.deposterization.passes.comment": "Default number of passes",
  "resample.deposterization.useperceptualcolor.name": "Use perceptual colour",
  "resample.deposterization.useperceptualcolor.comment": "Use perceptual color for color comparisons?",
  "resample.deposterization.useredmean.name": "Use redmean",
  "resample.deposterization.useredmean.comment": "Use redmean algorithm for perceptual colour comparisons instead of YCbCr",

  "resample.recolor.title": "Recolour",
  "resample.recolor.enabled.name": "Enable",
  "resample.recolor.enabled.comment": "Should (experimental) resample-based recoloring be enabled?",
  "resample.recolor.rscalar.name": "Red",
  "resample.recolor.bscalar.name": "Blue",
  "resample.recolor.gscalar.name": "Green",

  "resample.blockcompression.title": "Block Comparison",
  "resample.blockcompression.enabled.name": "Enable",
  "resample.blockcompression.enabled.comment": "Should block compression of sprites be enabled?",
  "resample.blockcompression.quality.name": "Quality",
  "resample.blockcompression.quality.comment": "What quality level should be used?",
  "resample.blockcompression.hardalphadeviationthreshold.name": "Alpha deviation threshold",
  "resample.blockcompression.hardalphadeviationthreshold.comment": "What alpha deviation threshold should be applied to determine if a sprite's transparency is smooth or mask-like (determines between bc2 and bc3)?",

  "resample.padding.title": "Padding",
  "resample.padding.enabled.name": "Enable",
  "resample.padding.enabled.comment": "Add padding to sprites to allow resampling to extend beyond the natural sprite boundaries.",
  "resample.padding.minimumsizetexels.name": "Min size",
  "resample.padding.minimumsizetexels.comment": "Minimum edge size of a sprite for padding to be enabled.",
  "resample.padding.ignoreunknown.name": "Skip unknown",
  "resample.padding.ignoreunknown.comment": "Do not add padding to sprites that are unnamed.",
  "resample.padding.padsolidedges.name": "Pad solid edges",

  "resample.common.title": "Common",
  "resample.common.equalcolortolerance.name": "Colour difference threshold",
  "resample.common.equalcolortolerance.comment": "Colours below this threshold are considered to be equal. Values between 0 to 255",
  "resample.common.luminanceweight.name": "Luminance weight",
  "resample.common.luminanceweight.comment": "The weight (importance) provided to luminance as opposed to chrominance when performing color comparisons",

  "resample.xbrz.title": "xBRZ",
  "resample.xbrz.dominantdirectionthreshold.name": "Dominant direction threshold",
  "resample.xbrz.dominantdirectionthreshold.comment": "The threshold for a corner-direction to be considered 'dominant'",
  "resample.xbrz.steepdirectionthreshold.name": "Steep direction threshold",
  "resample.xbrz.steepdirectionthreshold.comment": "The threshold for a corner-direction to be considered 'steep'",
  "resample.xbrz.centerdirectionbias.name": "Center bias",
  "resample.xbrz.centerdirectionbias.comment": "Bias towards kernel center applied to corner-direction calculations",
  "resample.xbrz.usegradientblockcopy.name": "Use gradient block copy",
  "resample.xbrz.usegradientblockcopy.comment": "Should gradient block copies be used? Note that this is very broken.",

  "wrapdetection.title": "Wrap Detection",
  "wrapdetection.enabled.name": "Enable",
  "wrapdetection.enabled.comment": "Should edge-wrap analysis be enabled?",
  "wrapdetection.edgethreshold.name": "Edge threshold",
  "wrapdetection.edgethreshold.comment": "What is the threshold percentage of alpha values to be used to determine if it is a wrapping edge?",
  "wrapdetection.alphathreshold.name": "Alpha threshold",
  "wrapdetection.alphathreshold.comment": "Minimum alpha value assumed to be opaque.",

  "asyncscaling.title": "Asynchronous Scaling",
  "asyncscaling.enabled.name": "Enable",
  "asyncscaling.enabledforunknowntextures.name": "Enabled for unknown textures",
  "asyncscaling.enabledforunknowntextures.comment": "Should asynchronous scaling be enabled for unknown textures?",
  "asyncscaling.forcesynchronousstores.name": "Force synchronous stores",
  "asyncscaling.forcesynchronousstores.comment": "Always use synchronous stores",
  "asyncscaling.throttledsynchronousloads.name": "Throttle synchronous loads",
  "asyncscaling.throttledsynchronousloads.comment": "Should synchronous stores be throttled?",
  "asyncscaling.canfetchandloadsameframe.name": "Fetch and load in same frame",
  "asyncscaling.canfetchandloadsameframe.comment": "Should we fetch and load texture data within the same frame?",
  "asyncscaling.minimumsizetexels.name": "Minimum size",
  "asyncscaling.minimumsizetexels.comment": "What is the minimum number of pixels in a sprite to be considered for asynchronous scaling?",
  "asyncscaling.flushsynchronizedtasksonwarp.name": "Flush tasks on warp",
  "asyncscaling.flushsynchronizedtasksonwarp.comment": "Should the Synchronized Task Scheduler be flushed during warps?",

  "residentcache.title": "Resident Cache",
  "residentcache.enabled.name": "Enable",
  "residentcache.enabled.comment": "Should the resident cache be enabled?",
  "residentcache.alwaysflush.name": "Always flush",
  "residentcache.alwaysflush.comment": "Should memory cache elements always be flushed upon update?",
  "residentcache.maxsize.name": "Maximum size",
  "residentcache.maxsize.comment": "What is the maximum size of the resident cache?",
  "residentcache.compress.name": "Compression algorithm",
  "residentcache.compress.comment": "The preferred compression algorithm for the resident cache",

  "texturefilecache.title": "Texture File Cache",
  "texturefilecache.enabled.name": "Enable",
  "texturefilecache.enabled.comment": "Should the texture memory cache be enabled?",
  "texturefilecache.maxsize.name": "Maximum size",
  "texturefilecache.maxsize.comment": "What is the maximum size of the texture file cache?",
  "texturefilecache.precache.name": "Pre-cache",
  "texturefilecache.precache.comment": "Should all texture files in the 'Mods' directory attempt to be pre-cached?",

  "suspendedcache.title": "Suspended Cache",
  "suspendedcache.enabled.name": "Enable",
  "suspendedcache.enabled.comment": "Should the suspended sprite cache be enabled?",
  "suspendedcache.maxcachesize.name": "Maximum cache size",
  "suspendedcache.maxcachesize.comment": "What is the maximum size (in bytes) to store in suspended sprite cache?",

  "smapi.title": "SMAPI",
  "smapi.applypatchenabled.name": "Enable `ApplyPatch` patch",
  "smapi.applypatchenabled.comment": "Should the ApplyPatch method be patched?",
  "smapi.applygetdatapatch.name": "Enable `GetData` patch",
  "smapi.applygetdatapatch.comment": "Should 'GetData' be patched to use caches?",

  "extras.title": "Extras",
  "extras.fastquit.name": "Fast quit",
  "extras.fastquit.comment": "Should the game have 'fast quitting' enabled?",
  "extras.smoothlines.name": "Smooth lines",
  "extras.smoothlines.comment": "Should line drawing be smoothed?",
  "extras.strokeshadowedtext.name": "Stroke text shadows",
  "extras.strokeshadowedtext.comment": "Should shadowed text be stroked instead?",

  "extras.pathfinding.title": "Pathfinding",
  "extras.pathfinding.optimizewarppoints.name": "Optimize warp points",
  "extras.pathfinding.optimizewarppoints.comment": "Should NPC Warp Points code be optimized?",
  "extras.pathfinding.enablecrossthreadoptimizations.name": "Enable cross-thread optimizations",
  "extras.pathfinding.enablecrossthreadoptimizations.comment": "Should cross-thread optimizations be enabled?",
  "extras.pathfinding.honorgenderlocking.name": "Honour gender locking",
  "extras.pathfinding.honorgenderlocking.comment": "Should gender-locked locations be honored?",
  "extras.stablesort.name": "Stable sort",
  "extras.stablesort.comment": "Should the default batch sort be replaced with a stable sort? Stable sort keeps the original order of items that are considered equal.",
  "extras.preventunresponsive.name": "Prevent unresponsive",
  "extras.preventunresponsive.comment": "Should the game be prevented from going 'unresponsive' during loads?",
  "extras.optimizeenginetaskrunner.name": "Optimize engine task runner",
  "extras.optimizeenginetaskrunner.comment": "Should the engine's deferred thread task runner be optimized?",
  "extras.enabledirtdrawoptimizations.name": "Enable dirt draw optimizations",
  "extras.enabledirtdrawoptimizations.comment": "Should dirt drawing optimizations be enabled?",

  "extras.opengl.title": "OpenGL",
  "extras.opengl.enabled.name": "Enable",
  "extras.opengl.enabled.comment": "Should low-level OpenGL optimizations be performed?",
  "extras.opengl.optimizetexture2dsetdata.name": "Optimize `Texture2D.SetData`",
  "extras.opengl.optimizetexture2dsetdata.comment": "Should Texture2D.SetData be optimized?",
  "extras.opengl.optimizetexture2dgetdata.name": "Optimize `Texture2D.GetData`",
  "extras.opengl.optimizetexture2dgetdata.comment": "Should Texture2D.GetData be optimized?",
  "extras.opengl.drawuserindexedprimitives.title": "Draw User Indexed Primitives",
  "extras.opengl.drawuserindexedprimitives.optimize.name": "Optimize",
  "extras.opengl.drawuserindexedprimitives.optimize.comment": "Should the call be optimized?",
  "extras.opengl.drawuserindexedprimitives.advanced.name": "Advanced optimizations",
  "extras.opengl.drawuserindexedprimitives.advanced.comment": "Should advanced optimizations be enabled?",
  "extras.opengl.drawuserindexedprimitives.usevertexbufferobjects.name": "Use vertex buffer objects",
  "extras.opengl.drawuserindexedprimitives.usevertexbufferobjects.comment": "Should Vertex Buffer Objects be used?",
  "extras.opengl.drawuserindexedprimitives.useindexbufferobjects.name": "Use index buffer objects",
  "extras.opengl.drawuserindexedprimitives.useindexbufferobjects.comment": "Should Index Buffer Objects be used?",
  "extras.opengl.usecopytexture.name": "Use `glCopyTexture`",
  "extras.opengl.usecopytexture.comment": "Should glCopyTexture be used?",
  "extras.opengl.usetexstorage.name": "Use `glTexStorage`",
  "extras.opengl.usetexstorage.comment": "Should glTexStorage be used?",

  "extras.snow.title": "Snow",
  "extras.snow.enabled.name": "Enable",
  "extras.snow.enabled.comment": "Should custom snowfall be used during snowstorms?",
  "extras.snow.minimumdensity.name": "Minimum density",
  "extras.snow.minimumdensity.comment": "Minimum snow density",
  "extras.snow.maximumdensity.name": "Maximum density",
  "extras.snow.maximumdensity.comment": "Maximum snow density",
  "extras.snow.maximumrotationspeed.name": "Maximum rotate speed",
  "extras.snow.maximumrotationspeed.comment": "Maximum snow rotation speed",
  "extras.snow.maximumscale.name": "Maximum scale",
  "extras.snow.maximumscale.comment": "Maximum snow scale",
  "extras.snow.puffersnowchance.name": "Puffer snow chance",

  "extras.modpatches.title": "Mod Patches",
  "extras.modpatches.patchcustomnpcfixes.name": "Patch CustomNPCFixes",
  "extras.modpatches.patchcustomnpcfixes.comment": "Patch CustomNPCFixes in order to improve load times?",
  "extras.modpatches.disablepytkmitigation.name": "Disable PyTK mitigation",
  "extras.modpatches.disablepytkmitigation.comment": "Disable unnecessary PyTK mitigation for Clear Glasses?",

  "filecache.title": "File Cache",
  "filecache.enabled.name": "Enable",
  "filecache.enabled.comment": "Should the file cache be enabled? Warning: this setting has been known to cause texture mismatch issues with certain content packs.",
  "filecache.compress.name": "Compression algorithm",
  "filecache.compress.comment": "What compression algorithm should be used?",
  "filecache.forcecompress.name": "Force compression",
  "filecache.forcecompress.comment": "Should files be compressed regardless of if it would be beneficial?",
  "filecache.prefersystemcompression.name": "Prefer system compression",
  "filecache.prefersystemcompression.comment": "Should system compression (such as NTFS compression) be preferred?",

  "enum.Scaler.None": "None",
  "enum.CompressionQuality.Low": "Low",
  "enum.CompressionQuality.Medium": "Medium",
  "enum.CompressionQuality.High": "High",
  "enum.LogLevel.Trace": "Trace",
  "enum.LogLevel.Debug": "Debug",
  "enum.LogLevel.Info": "Info",
  "enum.LogLevel.Warn": "Warn",
  "enum.LogLevel.Error": "Error",
  "enum.Compress.Trace": "Trace",
  "enum.Algorithm.None": "None",
  "enum.Algorithm.Compress": "Compress",
  "enum.Algorithm.Deflate": "Deflate",
  "enum.Algorithm.Zstd/Best": "Zstd (Best)",
  "enum.GCLatencyMode.Batch": "Batch",
  "enum.GCLatencyMode.Interactive": "Interactive",
  "enum.GCLatencyMode.LowLatency": "Low latency",
  "enum.GCLatencyMode.SustainedLowLatency": "Sustained low latency",
  "enum.GCLatencyMode.NoGCRegion": "No garbage collection region",
  "enum.SurfaceFormat.Color": "Colour",
  "enum.SurfaceFormat.Single": "Single",
}
