[Config]
ConfigVersion = "0.2.3"
# Should Clear Glasses be enabled? Unsetting this will disable _all_ Clear Glasses functionality.
Enabled = true
# Button to toggle Clear Glasses
# Legal Values: [
#	None, Back, Tab, Enter, Pause, CapsLock, Kana, Kanji, Escape, ImeConvert, 
#	ImeNoConvert, Space, PageUp, PageDown, End, Home, Left, Up, Right, Down, Select, 
#	Print, Execute, PrintScreen, Insert, Delete, Help, D0, D1, D2, D3, D4, D5, D6, 
#	D7, D8, D9, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, 
#	X, Y, Z, LeftWindows, RightWindows, Apps, Sleep, NumPad0, NumPad1, NumPad2, 
#	NumPad3, NumPad4, NumPad5, NumPad6, NumPad7, NumPad8, NumPad9, Multiply, Add, 
#	Separator, Subtract, Decimal, Divide, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, 
#	F11, F12, F13, F14, F15, F16, F17, F18, F19, F20, F21, F22, F23, F24, NumLock, 
#	Scroll, LeftShift, RightShift, LeftControl, RightControl, LeftAlt, RightAlt, 
#	BrowserBack, BrowserForward, BrowserRefresh, BrowserStop, BrowserSearch, 
#	BrowserFavorites, BrowserHome, VolumeMute, VolumeDown, VolumeUp, MediaNextTrack, 
#	MediaPreviousTrack, MediaStop, MediaPlayPause, LaunchMail, SelectMedia, 
#	LaunchApplication1, LaunchApplication2, OemSemicolon, OemPlus, OemComma, 
#	OemMinus, OemPeriod, OemQuestion, OemTilde, ChatPadGreen, ChatPadOrange, 
#	OemOpenBrackets, OemPipe, OemCloseBrackets, OemQuotes, Oem8, OemBackslash, 
#	ProcessKey, OemCopy, OemAuto, OemEnlW, Attn, Crsel, Exsel, EraseEof, Play, Zoom, 
#	Pa1, OemClear, MouseLeft, MouseRight, MouseMiddle, MouseX1, MouseX2, DPadUp, 
#	DPadDown, DPadLeft, DPadRight, ControllerStart, ControllerBack, LeftStick, 
#	RightStick, LeftShoulder, RightShoulder, BigButton, ControllerA, ControllerB, 
#	ControllerX, ControllerY, LeftThumbstickLeft, RightTrigger, LeftTrigger, 
#	RightThumbstickUp, RightThumbstickDown, RightThumbstickRight, 
#	RightThumbstickLeft, LeftThumbstickUp, LeftThumbstickDown, LeftThumbstickRight
# ]
ToggleButton = "F11"
# The preferred maximum texture edge length, if allowed by the hardware
PreferredMaxTextureDimension = 16384
ShowIntroMessage = false
# If the data cache is preferred to be elsewhere, it can be set here
DataStoreOverride = ""

	[Config.WatchDog]
	# Should the watchdog be enabled?
	Enabled = false
	# What should the default sleep interval be (in milliseconds)?
	DefaultSleepInterval = 5000
	# What should the short sleep interval be (in milliseconds)?
	ShortSleepInterval = 500
	# What should the interrupt interval be (in milliseconds)?
	InterruptInterval = 10000

	[Config.Garbage]
	# Should unowned textures be marked in the garbage collector's statistics?
	CollectAccountUnownedTextures = false
	ShouldCollectAccountOwnedTextures = true
	# The amount of free memory required by SM after which it triggers hard recovery operations
	RequiredFreeMemoryHard = 134217728
	# The amount of free memory required by SM after which it triggers soft recovery operations
	RequiredFreeMemorySoft = 1073741824
	# Hysteresis applied to RequiredFreeMemory
	RequiredFreeMemoryHysteresis = 1.5
	# Should sprites containing season names be purged on a seasonal basis?
	SeasonalPurge = true
	# What runtime garbage collection latency mode should be set?
	# Legal Values: [
	#	Batch, Interactive, LowLatency, SustainedLowLatency, NoGCRegion
	# ]
	LatencyMode = "SustainedLowLatency"

	[Config.Debug]
	# Should a frametime counter be displayed?
	DisplayFrameTime = false

		[Config.Debug.Logging]
		# Legal Values: [
		#	Trace, Debug, Info, Warn, Error, Alert
		# ]
		LogLevel = "Trace"

	[Config.DrawState]
	# Enable linear sampling for sprites
	SetLinear = true
	# Enable linear sampling for sprites
	SetLinearUnresampled = false
	# How many MSAA samples should be used?
	AntialiasingSamples = 1
	# Disable the depth buffer (unused in this game)
	DisableDepthBuffer = false
	# The default backbuffer format to request
	# Legal Values: [
	#	Color, Bgr565, Bgra5551, Bgra4444, Dxt1, Dxt3, Dxt5, NormalizedByte2, 
	#	NormalizedByte4, Rgba1010102, Rg32, Rgba64, Alpha8, Single, Vector2, Vector4, 
	#	HalfSingle, HalfVector2, HalfVector4, HdrBlendable, Bgr32, Bgra32, ColorSRgb, 
	#	Bgr32SRgb, Bgra32SRgb, Dxt1SRgb, Dxt3SRgb, Dxt5SRgb, RgbPvrtc2Bpp, RgbPvrtc4Bpp, 
	#	RgbaPvrtc2Bpp, RgbaPvrtc4Bpp, RgbEtc1, Dxt1a, RgbaAtcExplicitAlpha, 
	#	RgbaAtcInterpolatedAlpha, Rgb8Etc2, Srgb8Etc2, Rgb8A1Etc2, Srgb8A1Etc2, 
	#	Rgba8Etc2, SRgb8A8Etc2
	# ]
	BackbufferFormat = "Color"
	# The default HDR backbuffer format to request
	# Legal Values: [
	#	Color, Bgr565, Bgra5551, Bgra4444, Dxt1, Dxt3, Dxt5, NormalizedByte2, 
	#	NormalizedByte4, Rgba1010102, Rg32, Rgba64, Alpha8, Single, Vector2, Vector4, 
	#	HalfSingle, HalfVector2, HalfVector4, HdrBlendable, Bgr32, Bgra32, ColorSRgb, 
	#	Bgr32SRgb, Bgra32SRgb, Dxt1SRgb, Dxt3SRgb, Dxt5SRgb, RgbPvrtc2Bpp, RgbPvrtc4Bpp, 
	#	RgbaPvrtc2Bpp, RgbaPvrtc4Bpp, RgbEtc1, Dxt1a, RgbaAtcExplicitAlpha, 
	#	RgbaAtcInterpolatedAlpha, Rgb8Etc2, Srgb8Etc2, Rgb8A1Etc2, Srgb8A1Etc2, 
	#	Rgba8Etc2, SRgb8A8Etc2
	# ]
	BackbufferHDRFormat = "Rgba64"
	# Should the system HDR settings be honored?
	HonorHDRSettings = true

	[Config.Resample]
	# Should resampling be enabled?
	Enabled = true
	# Should resampling be enabled for normal sprites?
	EnabledSprites = true
	# Should resampling be enabled for portraits?
	EnabledPortraits = true
	# Should resampling be enabled for regular text?
	EnabledLargeText = true
	# Should resampling be enabled for small text?
	EnabledSmallText = true
	# Should the texture be scale-adjusted if its scaled dimensions are outside preferred dimensional limits?
	Scale = true
	# What scaling algorithm should be used by default?
	# Legal Values: [
	#	xBRZ, EPX/ScaleX, EPXLegacy, xBREPX, None
	# ]
	Scaler = "xBRZ"
	# What scaling algorithm should be used for portraits?
	# Legal Values: [
	#	xBRZ, EPX/ScaleX, EPXLegacy, xBREPX, None
	# ]
	ScalerPortrait = "xBRZ"
	# What scaling algorithm should be used for text?
	# Legal Values: [
	#	xBRZ, EPX/ScaleX, EPXLegacy, xBREPX, None
	# ]
	ScalerText = "xBRZ"
	# What scaling algorithm should be used for gradient sprites?
	# Legal Values: [
	#	xBRZ, EPX/ScaleX, EPXLegacy, xBREPX, None
	# ]
	ScalerGradient = "ScaleX"
	# Should dynamic scaling be used (scaling based upon apparent sprite size)
	EnableDynamicScale = true
	# Should excess transparent rows/columns be trimmed?
	TrimExcessTransparency = true
	# Should we assume that input sprites are gamma corrected?
	AssumeGammaCorrected = true
	# Minimum scale factor of sprites (clamped to chosen scaler)
	MinScale = 1
	# Maximum scale factor of sprites (clamped to chosen scaler)
	MaxScale = 6
	# What value should be added to the calculated scale?
	OverScale = 0.5
	# Should sprites that are already at their rendering size be forced to be rescaled?
	ForceOverScaling = true
	# Minimum edge length of a sprite to be considered for resampling
	MinimumTextureDimensions = 1
	# Should wrapped addressing be enabled for sprite resampling (when analysis suggests it)?
	EnableWrappedAddressing = false
	# Should resampling be stalled if it is determined that it will cause hitches?
	UseFrametimeStalling = true
	# Should color enhancement/rebalancing be performed?
	UseColorEnhancement = true
	# Should transparent pixels be premultiplied to prevent a 'halo' effect?
	PremultiplyAlpha = true
	# Low pass value that should be filtered when reversing premultiplied alpha.
	PremultiplicationLowPass = 1023
	# Use redmean algorithm for perceptual color comparisons?
	UseRedmean = false
	# What textures are drawn in 'slices' and thus should be special-cased to be resampled as one texture?
	SlicedTextures = [
		"LooseSprites\\Cursors::0,2000:640,256", 
		"Maps\\Mines\\volcano_dungeon::0,320:160,64", 
		"LooseSprites\\Cloudy_Ocean_BG", 
		"LooseSprites\\Cloudy_Ocean_BG_Night", 
		"LooseSprites\\stardewPanorama", 
		"Maps\\nightSceneMaru", 
		"Maps\\nightSceneMaruTrees", 
		"Maps\\sebastianMountainTiles", 
		"Maps\\sebastianRideTiles", 
		"Tilesheets\\GuntherExpedition2_Shadows", 
		"Tilesheets\\Highlands_Fog", 
		"Tilesheets\\Highlands_FogBackground"
	]
	# What textures or spritesheets use 4xblock sizes?
	TwoXTextures = [
		"Maps\\WoodBuildings"
	]
	# What textures or spritesheets use 4xblock sizes?
	FourXTextures = [
		"Characters\\Monsters\\Crow", 
		"Characters\\femaleRival", 
		"Characters\\maleRival", 
		"LooseSprites\\Bat", 
		"LooseSprites\\buildingPlacementTiles", 
		"LooseSprites\\chatBox", 
		"LooseSprites\\daybg", 
		"LooseSprites\\DialogBoxGreen", 
		"LooseSprites\\hoverBox", 
		"LooseSprites\\nightbg", 
		"LooseSprites\\robinAtWork", 
		"LooseSprites\\skillTitles", 
		"LooseSprites\\textBox", 
		"Maps\\busPeople", 
		"Maps\\cavedarker", 
		"Maps\\FarmhouseTiles", 
		"Maps\\GreenHouseInterior", 
		"Maps\\MenuTiles", 
		"Maps\\MenuTilesUncolored", 
		"Maps\\spring_BusStop", 
		"Maps\\TownIndoors", 
		"TerrainFeatures\\BuffsIcons", 
		"TerrainFeatures\\DiggableWall_basic", 
		"TerrainFeatures\\DiggableWall_basic_dark", 
		"TerrainFeatures\\DiggableWall_frost", 
		"TerrainFeatures\\DiggableWall_frost_dark", 
		"TerrainFeatures\\DiggableWall_lava", 
		"TerrainFeatures\\DiggableWall_lava_dark", 
		"TerrainFeatures\\Stalagmite", 
		"TerrainFeatures\\Stalagmite_Frost", 
		"TerrainFeatures\\Stalagmite_Lava", 
		"TileSheets\\Fireball", 
		"TileSheets\\animations"
	]
	# What spritesheets will absolutely not be resampled or processed?
	Blacklist = [
		"LooseSprites\\Lighting\\", 
		"@^Maps\\\\.+Mist", 
		"@^Maps\\\\.+mist", 
		"@^Maps\\\\.+Shadow", 
		"@^Maps\\\\.+Shadows", 
		"@^Maps\\\\.+Fog", 
		"@^Maps\\\\.+FogBackground"
	]
	# What spritesheets will absolutely not be treated as gradients?
	GradientBlacklist = [
		"TerrainFeatures\\hoeDirt"
	]

		[Config.Resample.BlockMultipleAnalysis]
		# Should sprites be analyzed to see if they are block multiples?
		Enabled = true
		# What threshold should be used for block multiple analysis?
		EqualityThreshold = 1
		# How many blocks can be different for the test to still pass?
		MaxInequality = 1

		[Config.Resample.Analysis]
		# Max color difference to not consider a sprite to be a gradient?
		MaxGradientColorDifference = 38
		# Minimum different shades required (per channel) for a sprite to be a gradient?
		MinimumGradientShades = 2
		# Maximum proportion of opaque texels for a sprite to be a gradient?
		MaximumGradientOpaqueProportion = 0.95
		# Minimum proportion of opaque texels for a sprite to be premultiplied?
		MinimumPremultipliedOpaqueProportion = 0.05

		[Config.Resample.Filters]
		# Enable colour filters applied to all resampled textures
		Enabled = true
		Saturation = -20
		Brightness = 0
		Temperature = 0
		# Experimental resample-based recolor support
		[Config.Resample.Recolor]
		# Should (experimental) resample-based recoloring be enabled?
		Enabled = false
		RScalar = 0.8976420000000001
		GScalar = 0.998476
		BScalar = 1.18365

		[Config.Resample.BlockCompression]
		# Should block compression of sprites be enabled?
		Enabled = true
		# What quality level should be used?
		# Legal Values: [
		#	Low, Medium, High
		# ]
		Quality = "High"
		# What alpha deviation threshold should be applied to determine if a sprite's transparency is smooth or mask-like (determines between bc2 and bc3)?
		HardAlphaDeviationThreshold = 7

		[Config.Resample.Padding]
		# Should padding be applied to sprites to allow resampling to extend beyond the natural sprite boundaries?
		Enabled = true
		# What is the minimum edge size of a sprite for padding to be enabled?
		MinimumSizeTexels = 4
		# Should unknown (unnamed) sprites be ignored by the padding system?
		IgnoreUnknown = false
		PadSolidEdges = false
		# What spritesheets should not be padded?
		BlackList = [
			"LooseSprites\\Cursors::256,308:50,34", 
			"Portraits\\"
		]
		# What spritesheets should have a stricter edge-detection algorithm applied?
		StrictList = [
			"LooseSprites\\Cursors"
		]
		# What spritesheets should always be padded?
		AlwaysList = [
			"LooseSprites\\font_bold", 
			"Characters\\Farmer\\hairstyles", 
			"Characters\\Farmer\\hairstyles2", 
			"Characters\\Farmer\\hats", 
			"Characters\\Farmer\\pants", 
			"Characters\\Farmer\\shirts", 
			"TileSheets\\weapons", 
			"TileSheets\\bushes", 
			"TerrainFeatures\\grass", 
			"TileSheets\\debris", 
			"TileSheets\\animations", 
			"Maps\\springobjects", 
			"Maps\\summerobjects", 
			"Maps\\winterobjects", 
			"Maps\\fallobjects", 
			"Buildings\\houses", 
			"TileSheets\\furniture", 
			"TerrainFeatures\\tree1_spring", 
			"TerrainFeatures\\tree2_spring", 
			"TerrainFeatures\\tree3_spring", 
			"TerrainFeatures\\tree1_summer", 
			"TerrainFeatures\\tree2_summer", 
			"TerrainFeatures\\tree3_summer", 
			"TerrainFeatures\\tree1_fall", 
			"TerrainFeatures\\tree2_fall", 
			"TerrainFeatures\\tree3_fall", 
			"TerrainFeatures\\tree1_winter", 
			"TerrainFeatures\\tree2_winter", 
			"TerrainFeatures\\tree3_winter"
		]
		# Settings common to all scalers
		[Config.Resample.Common]
		# The tolerance for colors to be considered equal - [0, 256)
		EqualColorTolerance = 20
		# The weight provided to luminance as opposed to chrominance when performing color comparisons
		LuminanceWeight = 1

		[Config.Resample.xBRZ]
		# The threshold for a corner-direction to be considered 'dominant'
		DominantDirectionThreshold = 4.4
		# The threshold for a corner-direction to be considered 'steep'
		SteepDirectionThreshold = 2.2
		# Bias towards kernel center applied to corner-direction calculations
		CenterDirectionBias = 3
		# Should gradient block copies be used? (Note: Very Broken)
		UseGradientBlockCopy = false

	[Config.WrapDetection]
	# What is the threshold percentage of alpha values to be used to determine if it is a wrapping edge?
	EdgeThreshold = 0.2000000029802322
	# What is the minimum alpha value assumed to be opaque?
	AlphaThreshold = 1

	[Config.AsyncScaling]
	# Should asynchronous scaling be enabled for unknown textures?
	EnabledForUnknownTextures = true
	# Should synchronous stores always be used?
	ForceSynchronousStores = true
	# Should synchronous stores be throttled?
	ThrottledSynchronousLoads = true
	# Should we fetch and load texture data within the same frame?
	CanFetchAndLoadSameFrame = true
	# What is the minimum number of texels in a sprite to be considered for asynchronous scaling?
	MinimumSizeTexels = 0
	# Should the Synchronized Task Scheduler be flushed during warps?
	FlushSynchronizedTasksOnWarp = true

	[Config.ResidentCache]
	# Should the resident cache be enabled?
	Enabled = true
	# Should memory cache elements always be flushed upon update?
	AlwaysFlush = false
	# What is the maximum size of the resident cache?
	MaxSize = 2147483648
	# The preferred compression algorithm for the resident cache
	# Legal Values: [
	#	None, Compress, Deflate, Zstd/Best
	# ]
	Compress = "None"

	[Config.TextureFileCache]
	# Should the texture memory cache be enabled?
	Enabled = true
	# What is the maximum size of the texture file cache?
	MaxSize = 2147483648
	# Should all texture files in the Mods directory attempt to be pre-cached?
	Precache = false

	[Config.SuspendedCache]
	# Should the suspended sprite cache be enabled?
	Enabled = true
	# What is the maximum size (in bytes) to store in suspended sprite cache?
	MaxCacheSize = 4294967296

	[Config.SMAPI]
	# Should the ApplyPatch method be patched?
	ApplyPatchEnabled = true
	# Should 'GetData' be patched to use caches?
	ApplyGetDataPatch = true

	[Config.Extras]
	# Should the game have 'fast quitting' enabled?
	FastQuit = false
	# Should line drawing be smoothed?
	SmoothLines = true
	# Should shadowed text be stroked instead?
	StrokeShadowedText = false
	# Should the default batch sort be replaced with a stable sort?
	StableSort = true
	# Should the game be prevented from going 'unresponsive' during loads?
	PreventUnresponsive = true
	# Should the engine's deferred thread task runner be optimized?
	OptimizeEngineTaskRunner = true
	# Should dirt drawing optimizations be enabled?
	EnableDirtDrawOptimizations = false

		[Config.Extras.Pathfinding]
		# Should NPC Warp Points code be optimized?
		OptimizeWarpPoints = true
		# Should cross-thread optimizations be enabled?
		EnableCrossThreadOptimizations = true
		# Should gender-locked locations be honored?
		HonorGenderLocking = true

		[Config.Extras.OpenGL]
		# Should low-level OpenGL optimizations be performed?
		Enabled = true
		# Should Texture2D.SetData be optimized?
		OptimizeTexture2DSetData = true
		# Should Texture2D.GetData be optimized?
		OptimizeTexture2DGetData = true
		# Should glCopyTexture be used?
		UseCopyTexture = true
		# Should glTexStorage be used?
		UseTexStorage = true

			[Config.Extras.OpenGL.DrawUserIndexedPrimitives]
			# Should the call be optimized?
			Optimize = true
			# Should advanced optimizations be enabled?
			Advanced = true
			# Should Index Buffer Objects be used?
			UseIndexBufferObjects = true

		[Config.Extras.Snow]
		# Should custom snowfall be used during snowstorms?
		Enabled = true
		# Minimum Snow Density
		MinimumDensity = 48
		# Maximum Snow Density
		MaximumDensity = 144
		# Maximum Snow Rotation Speed
		MaximumRotationSpeed = 0.01666666753590107
		# Maximum Snow Scale
		MaximumScale = 3
		PuffersnowChance = 0

		[Config.Extras.ModPatches]
		# Patch CustomNPCFixes in order to improve load times?
		PatchCustomNPCFixes = true
		# Disable unnecessary PyTK mitigation for Clear Glasses?
		DisablePyTKMitigation = true

	[Config.FileCache]
	# Should the file cache be enabled?
	Enabled = false
	# What compression algorithm should be used?
	# Legal Values: [
	#	None, Compress, Deflate, Zstd/Best
	# ]
	Compress = "None"
	# Should files be compressed regardless of if it would be beneficial?
	ForceCompress = false
	# Should system compression (such as NTFS compression) be preferred?
	PreferSystemCompression = false
