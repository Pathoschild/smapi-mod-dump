<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SinZsEventTester</name>
    </assembly>
    <members>
        <member name="T:SinZsEventTester.Framework.Api">
            <inheritdoc cref="T:SinZsEventTester.IEventTesterAPI"/>
        </member>
        <member name="M:SinZsEventTester.Framework.Api.#ctor(StardewModdingAPI.IModInfo,StardewModdingAPI.IMonitor)">
            <inheritdoc cref="T:SinZsEventTester.IEventTesterAPI"/>
        </member>
        <member name="M:SinZsEventTester.Framework.Api.RegisterAsset(StardewModdingAPI.IAssetName,System.Func{System.String,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:SinZsEventTester.Framework.Api.RegisterAsset(StardewModdingAPI.IAssetName,System.Collections.Generic.HashSet{System.String})">
            <inheritdoc />
        </member>
        <member name="M:SinZsEventTester.Framework.Api.RemoveAsset(StardewModdingAPI.IAssetName)">
            <inheritdoc />
        </member>
        <member name="T:SinZsEventTester.Framework.EventRecord">
            <summary>
            A record that represents an event in a location.
            </summary>
            <param name="location">Name of the location.</param>
            <param name="eventKey">The event's key.</param>
        </member>
        <member name="M:SinZsEventTester.Framework.EventRecord.#ctor(System.String,System.String)">
            <summary>
            A record that represents an event in a location.
            </summary>
            <param name="location">Name of the location.</param>
            <param name="eventKey">The event's key.</param>
        </member>
        <member name="P:SinZsEventTester.Framework.EventRecord.location">
            <summary>Name of the location.</summary>
        </member>
        <member name="P:SinZsEventTester.Framework.EventRecord.eventKey">
            <summary>The event's key.</summary>
        </member>
        <member name="T:SinZsEventTester.Framework.Extensions">
            <summary>
            The extension methods for this mod
            </summary>
        </member>
        <member name="M:SinZsEventTester.Framework.Extensions.GetNthChunk(System.String,System.Char,System.Int32)">
            <summary>
            Faster replacement for str.Split()[index];.
            </summary>
            <param name="str">String to search in.</param>
            <param name="deliminator">deliminator to use.</param>
            <param name="index">index of the chunk to get.</param>
            <returns>a readonlyspan char with the chunk, or an empty readonlyspan for failure.</returns>
        </member>
        <member name="M:SinZsEventTester.Framework.Extensions.SpeedUp(StardewValley.Menus.DialogueBox)">
            <summary>
            Speeds up dialogue boxes.
            </summary>
            <param name="db">the dialogue box to speed up.</param>
        </member>
        <member name="M:SinZsEventTester.Framework.Extensions.TrySplitOnce(System.String,System.Char,System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@)">
            <summary>
            Tries to split once by a deliminator.
            </summary>
            <param name="str">Text to split.</param>
            <param name="deliminator">Deliminator to split by.</param>
            <param name="first">The part that precedes the deliminator, or the whole text if not found.</param>
            <param name="second">The part that is after the deliminator.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:SinZsEventTester.Framework.Extensions.TrySplitOnce(System.ReadOnlySpan{System.Char},System.Char,System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@)">
            <summary>
            Tries to split once by a deliminator.
            </summary>
            <param name="str">Text to split.</param>
            <param name="deliminator">Deliminator to split by.</param>
            <param name="first">The part that precedes the deliminator, or the whole text if not found.</param>
            <param name="second">The part that is after the deliminator.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="T:SinZsEventTester.Framework.GSQTester">
            <summary>
            Tests GSQ.
            </summary>
            <param name="monitor">The monitor instance to use.</param>
            <param name="reflector">SMAPI's reflection helper.</param>
        </member>
        <member name="M:SinZsEventTester.Framework.GSQTester.#ctor(StardewModdingAPI.IMonitor,StardewModdingAPI.IReflectionHelper)">
            <summary>
            Tests GSQ.
            </summary>
            <param name="monitor">The monitor instance to use.</param>
            <param name="reflector">SMAPI's reflection helper.</param>
        </member>
        <member name="M:SinZsEventTester.Framework.GSQTester.Check(StardewValley.LocalizedContentManager)">
            <summary>
            Checks <see cref="T:StardewValley.DataLoader"/>'s assets' GSQ.
            </summary>
            <param name="content">The localized content manager to use.</param>
        </member>
        <member name="T:SinZsEventTester.Framework.Extensions">
            <summary>
            The extension methods for this class.
            </summary>
        </member>
        <member name="T:SinZsEventTester.Framework.IGenericModConfigMenuApi">
            <summary>The API which lets other mods add a config UI through Generic Mod Config Menu.</summary>
            <remarks>Copied from https://github.com/spacechase0/StardewValleyMods/blob/main/GenericModConfigMenu/IGenericModConfigMenuApi.cs. </remarks>
        </member>
        <member name="M:SinZsEventTester.Framework.IGenericModConfigMenuApi.Register(StardewModdingAPI.IManifest,System.Action,System.Action,System.Boolean)">
            <summary>Register a mod whose config can be edited through the UI.</summary>
            <param name="mod">The mod's manifest.</param>
            <param name="reset">Reset the mod's config to its default values.</param>
            <param name="save">Save the mod's current config to the <c>config.json</c> file.</param>
            <param name="titleScreenOnly">Whether the options can only be edited from the title screen.</param>
            <remarks>Each mod can only be registered once, unless it's deleted via <see cref="!:Unregister"/> before calling this again.</remarks>
        </member>
        <member name="M:SinZsEventTester.Framework.IGenericModConfigMenuApi.AddNumberOption(StardewModdingAPI.IManifest,System.Func{System.Int32},System.Action{System.Int32},System.Func{System.String},System.Func{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Func{System.Int32,System.String},System.String)">
            <summary>Add an integer option at the current position in the form.</summary>
            <param name="mod">The mod's manifest.</param>
            <param name="getValue">Get the current value from the mod config.</param>
            <param name="setValue">Set a new value in the mod config.</param>
            <param name="name">The label text to show in the form.</param>
            <param name="tooltip">The tooltip text shown when the cursor hovers on the field, or <c>null</c> to disable the tooltip.</param>
            <param name="min">The minimum allowed value, or <c>null</c> to allow any.</param>
            <param name="max">The maximum allowed value, or <c>null</c> to allow any.</param>
            <param name="interval">The interval of values that can be selected.</param>
            <param name="formatValue">Get the display text to show for a value, or <c>null</c> to show the number as-is.</param>
            <param name="fieldId">The unique field ID for use with <see cref="!:OnFieldChanged"/>, or <c>null</c> to auto-generate a randomized ID.</param>
        </member>
        <member name="T:SinZsEventTester.IEventTesterAPI">
            <summary>
            The API for this mod.
            </summary>
        </member>
        <member name="M:SinZsEventTester.IEventTesterAPI.RegisterAsset(StardewModdingAPI.IAssetName,System.Func{System.String,System.Boolean})">
            <summary>
            Registers an asset to be analyzed by the GSQ checker.
            </summary>
            <param name="assetName">The asset to analyze.</param>
            <param name="filter">A filter to select which string fields/properties should be considered GSQ fields.</param>
            <returns>true if added, false otherwise.</returns>
        </member>
        <member name="M:SinZsEventTester.IEventTesterAPI.RegisterAsset(StardewModdingAPI.IAssetName,System.Collections.Generic.HashSet{System.String})">
            <summary>
            Registers an asset to be analyzed by the GSQ checker.
            </summary>
            <param name="assetName">The asset to analyze.</param>
            <param name="additionalGSQNames">Additional strings that may correspond to fields that should be consider GSQ fields.</param>
            <returns>True if added, false otherwise.</returns>
        </member>
        <member name="M:SinZsEventTester.IEventTesterAPI.RemoveAsset(StardewModdingAPI.IAssetName)">
            <summary>
            Removes an asset from analysis by the GSQ checker.
            </summary>
            <param name="assetName">Asset to remove.</param>
            <returns>True if removed, false otherwise.</returns>
        </member>
        <member name="T:SinZsEventTester.ModEntry">
            <inheritdoc />
        </member>
        <member name="M:SinZsEventTester.ModEntry.Entry(StardewModdingAPI.IModHelper)">
            <inheritdoc />
        </member>
        <member name="M:SinZsEventTester.ModEntry.GetApi(StardewModdingAPI.IModInfo)">
            <inheritdoc />
        </member>
        <member name="M:SinZsEventTester.ModEntry.TrivialResponse(StardewValley.Menus.DialogueBox)">
            <summary>Marks a response as trivial.</summary>
        </member>
        <member name="F:SinZsEventTester.ModEntry.Color.White">
            <summary>
            This node has not been visited before and has not queued its children.
            </summary>
        </member>
        <member name="F:SinZsEventTester.ModEntry.Color.Grey">
            <summary>
            This node has queued its children, but has not been fully visited.
            </summary>
        </member>
        <member name="F:SinZsEventTester.ModEntry.Color.Black">
            <summary>
            This node is fully visited.
            </summary>
        </member>
        <member name="F:SinZsEventTester.ModEntry.Color.Blue">
            <summary>
            This node has not been visited before, but should only queue a single (also blue) child.
            </summary>
        </member>
        <member name="T:SinZsEventTester.I18n">
            <summary>Get translations from the mod's <c>i18n</c> folder.</summary>
            <remarks>This is auto-generated from the <c>i18n/default.json</c> file when the project is compiled.</remarks>
        </member>
        <member name="F:SinZsEventTester.I18n.Translations">
            <summary>The mod's translation helper.</summary>
        </member>
        <member name="M:SinZsEventTester.I18n.Init(StardewModdingAPI.ITranslationHelper)">
            <summary>Construct an instance.</summary>
            <param name="translations">The mod's translation helper.</param>
        </member>
        <member name="M:SinZsEventTester.I18n.EventSpeedRatio">
            <summary>Get a translation equivalent to "Event Speed Ratio".</summary>
        </member>
        <member name="M:SinZsEventTester.I18n.GetByKey(System.String,System.Object)">
            <summary>Get a translation by its key.</summary>
            <param name="key">The translation key.</param>
            <param name="tokens">An object containing token key/value pairs. This can be an anonymous object (like <c>new { value = 42, name = "Cranberries" }</c>), a dictionary, or a class instance.</param>
        </member>
    </members>
</doc>
