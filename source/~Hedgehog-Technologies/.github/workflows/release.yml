##################################################
##
## You're viewing a file in the SMAPI mod dump, which contains a copy of every open-source SMAPI mod
## for queries and analysis.
##
## This is *not* the original file, and not necessarily the latest version.
## Source repository: https://github.com/Hedgehog-Technologies/StardewMods
##
##################################################

name: Release
run-name: "Release Tag: ${{ github.ref_name }}"

on:
  push:
    tags:
      - '*/*.*.*'

jobs:
  create-releae:
    name: Build and created tagged release
    runs-on: ubuntu-latest

    steps:
      - name: Split tag
        uses: jungwinter/split@v2.1.0
        id: split
        with:
          msg: ${{ github.ref_name }}
          separator: '/'

      # - name: Test split
      #   run: |
      #     echo ${{ steps.split.outputs._0 }}
      #     echo ${{ steps.split.outputs._1 }}

      - name: Checkout source code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          ref: ${{ github.events.repository.default_branch }}

      - name: Setup dotnet 6.0.x
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: '6.0.x'

      - name: Install dependencies
        run: dotnet restore ${{ steps.split.outputs._0 }}
        working-directory: src

      - name: Build
        run: dotnet build --force ${{ steps.split.outputs._0 }} -c Release -p:BuildConfig=GITHUB
        working-directory: src

      # - name: Test output
      #   run: |
      #     echo 'src/${{ steps.split.outputs._0 }}/bin/Release/net6.0/${{ steps.split.outputs._0 }} ${{ steps.split.outputs._1 }}.zip'

      # - name: Bundle Content Packs
      #   if: ${{ steps.split.outputs._0 == 'AutoForager' }}
      #   run: |
      #     cd "src/Content Packs"
      #     for i in */; do cd "$i"; for j in */; do zip -r "${j%/}.zip" "$j"; done; cd ..; done
      #     cd ../..

      - name: Create GitHub Release
        uses: 'marvinpinto/action-automatic-releases@v1.2.1'
        id: auto_release
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          title: '${{ steps.split.outputs._0 }} @ v${{ steps.split.outputs._1 }}'
          prerelease: false
          automatic_release_tag: ${{ steps.split.outputs._1 }}+${{ steps.split.outputs._0 }}
          files: 'src/_releases/${{ steps.split.outputs._0 }} ${{ steps.split.outputs._1 }}.zip'

        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
