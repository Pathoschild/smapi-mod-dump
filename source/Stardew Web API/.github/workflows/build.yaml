##################################################
##
## You're viewing a file in the SMAPI mod dump, which contains a copy of every open-source SMAPI mod
## for queries and analysis.
##
## This is *not* the original file, and not necessarily the latest version.
## Source repository: https://github.com/zunderscore/StardewWebApi
##
##################################################

name: .NET Build

env:
  dotnet_version: 6.0.x
  project_path: ./src/
  project_name: StardewWebApi
  build_path: bin/Release/net6.0/

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "src/**"

jobs:
  checktag:
    name: Check for existing version tag
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.set_output.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Get version
        run: |
            echo "ModVersion=$(cat ${{ env.project_path }}/manifest.json | jq --raw-output '.Version')" >> $GITHUB_ENV

      - name: Check for corresponding git tag
        id: tag_check
        uses: mukunku/tag-exists-action@v1.2.0
        with:
          tag: "$ModVersion"

      - name: Fail on existing tag
        if: ${{ steps.tag_check.outputs.exists == 'true' }}
        run: exit 1

      - name: Set Output
        id: set_output
        run: echo "version=$ModVersion" >> $GITHUB_OUTPUT

  build:
    name: Build mod
    needs: checktag
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download reference assemblies
        uses: actions/checkout@v4
        with:
          repository: StardewModders/mod-reference-assemblies
          fetch-tags: true
          ref: refs/tags/SDV1.6.3-SMAPI4.0.2
          path: GamePath

      - name: Set game path
        run: |
          echo "GamePath=$GITHUB_WORKSPACE/GamePath" >> "$GITHUB_ENV"
          echo "<Project><PropertyGroup><GamePath>$GITHUB_WORKSPACE/GamePath</GamePath></PropertyGroup></Project>" > "$HOME/stardewvalley.targets"

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnet_version }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.project_path }}

      - name: Build
        run: dotnet build ${{ env.project_path }} --no-restore --configuration Release

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.project_name }} Release
          path: "${{ env.project_path }}${{ env.build_path }}${{ env.project_name }} ${{ needs.checktag.outputs.version }}.zip"

  release:
    name: Draft Release
    needs: [checktag, build]
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.project_name }} Release
          path: ./artifacts/

      - name: Draft Release
        id: draft
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.checktag.outputs.version }}
          name: ${{ env.project_name }} ${{ needs.checktag.outputs.version }}
          body: "## Release Notes\n\n- "
          draft: true
          prerelease: false
          files: |
            ./artifacts/${{ env.project_name }} ${{ needs.checktag.outputs.version }}.zip