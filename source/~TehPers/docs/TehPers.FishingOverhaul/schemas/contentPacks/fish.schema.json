/*************************************************
**
** You're viewing a file in the SMAPI mod dump, which contains a copy of every open-source SMAPI mod
** for queries and analysis.
**
** This is *not* the original file, and not necessarily the latest version.
** Source repository: https://github.com/TehPers/StardewValleyMods
**
*************************************************/

{
  "oneOf": [
    {
      "$ref": "#/definitions/TehPers.FishingOverhaul.Config.ContentPacks.FishPack"
    }
  ],
  "$schema": "http://json-schema.org/draft/2020-12/schema",
  "title": "FishPack",
  "definitions": {
    "TehPers.FishingOverhaul.Config.ContentPacks.FishPack": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "$schema": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ],
          "description": "Optional '$schema' URL. This is ignored and exists entirely for convenience."
        },
        "Add": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/TehPers.FishingOverhaul.Api.Content.FishEntry"
              }
            ]
          },
          "description": "The fish entries to add."
        }
      },
      "description": "Content which controls what fish are available to catch."
    },
    "TehPers.FishingOverhaul.Api.Content.FishEntry": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "FishKey",
        "AvailabilityInfo"
      ],
      "properties": {
        "FishKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/TehPers.Core.Api.Items.NamespacedKey"
            }
          ],
          "description": "The item key."
        },
        "AvailabilityInfo": {
          "oneOf": [
            {
              "$ref": "#/definitions/TehPers.FishingOverhaul.Api.Content.FishAvailabilityInfo"
            }
          ],
          "description": "The availability information."
        },
        "OnCatch": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/TehPers.FishingOverhaul.Api.Content.CatchActions"
            }
          ],
          "description": "Actions to perform when this is caught."
        }
      },
      "description": "A fish availability entry."
    },
    "TehPers.Core.Api.Items.NamespacedKey": {
      "type": "string",
      "pattern": "(?<namespace>[^:].+):(?<key>.*)"
    },
    "TehPers.FishingOverhaul.Api.Content.FishAvailabilityInfo": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "BaseChance"
      ],
      "properties": {
        "DepthMultiplier": {
          "type": "number",
          "description": "Effect that sending the bobber by less than the max distance has on the chance. This value should be no more than 1.",
          "default": 0.1
        },
        "MaxChanceDepth": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647,
          "description": "The required fishing depth to maximize the chances of catching the fish.",
          "default": null
        },
        "MaxDepth": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "integer",
              "minimum": -2147483648,
              "maximum": 2147483647
            }
          ],
          "description": "Obsolete: Use MaxBobberDepth instead\n\nMaximum bobber depth required to catch this.",
          "deprecated": true,
          "default": null
        },
        "BaseChance": {
          "type": "number",
          "description": "The base chance this will be caught. This is not a percentage chance, but rather a weight relative to all available entries."
        },
        "PriorityTier": {
          "type": "number",
          "description": "The priority tier for this entry. For all available entries, only the entries that share the highest priority tier can be caught. For example, if all trash entries have a tier of 0 except for a single entry that has a tier of 1, then that single entry is guaranteed to be caught, regardless of its calculated weighted chance. If that entry becomes unavailable, then entries from tier 0 are selected from instead. This can be useful when creating special items that should always be caught first but which can only be caught once, for example.",
          "default": 0.0
        },
        "StartTime": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647,
          "description": "Time this becomes available (inclusive).",
          "default": 600
        },
        "EndTime": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647,
          "description": "Time this is no longer available (exclusive).",
          "default": 2600
        },
        "Seasons": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/TehPers.Core.Api.Gameplay.Seasons"
              }
            ]
          },
          "description": "Seasons this can be caught in."
        },
        "Weathers": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/TehPers.Core.Api.Gameplay.Weathers"
              }
            ]
          },
          "description": "Weathers this can be caught in."
        },
        "WaterTypes": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/TehPers.FishingOverhaul.Api.WaterTypes"
              }
            ]
          },
          "description": "The type of water this can be caught in. Each location handles this differently."
        },
        "MinFishingLevel": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647,
          "description": "Required fishing level to catch this.",
          "default": 0
        },
        "MaxFishingLevel": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "integer",
              "minimum": -2147483648,
              "maximum": 2147483647
            }
          ],
          "description": "Maximum fishing level required to catch this, or null for no max.",
          "default": null
        },
        "IncludeLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of locations this should be available in. Leaving this empty will make this available everywhere. Some locations have special handling. For example, the mines use the location names \"UndergroundMine\" and \"UndergroundMine/N\", where N is the floor number (both location names are valid for the floor)."
        },
        "ExcludeLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of locations this should not be available in. This takes priority over IncludeLocations."
        },
        "Position": {
          "oneOf": [
            {
              "$ref": "#/definitions/TehPers.FishingOverhaul.Api.Content.PositionConstraint"
            }
          ],
          "description": "Constraints on the bobber's position on the map when fishing."
        },
        "FarmerPosition": {
          "oneOf": [
            {
              "$ref": "#/definitions/TehPers.FishingOverhaul.Api.Content.PositionConstraint"
            }
          ],
          "description": "Constraints on the farmer's position on the map when fishing."
        },
        "MinDepth": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647,
          "description": "Obsolete: Use MinBobberDepth instead\n\nMinimum bobber depth required to catch this.",
          "deprecated": true,
          "default": 0
        },
        "MinBobberDepth": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647,
          "description": "Minimum bobber depth required to catch this.",
          "default": 0
        },
        "MaxBobberDepth": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "integer",
              "minimum": -2147483648,
              "maximum": 2147483647
            }
          ],
          "description": "Maximum bobber depth required to catch this.",
          "default": null
        },
        "When": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": "Content Patcher conditions for when this is available."
        }
      },
      "description": "Information about the availability of a catchable fish."
    },
    "TehPers.Core.Api.Gameplay.Seasons": {
      "type": "string",
      "enum": [
        "None",
        "Spring",
        "Summer",
        "Fall",
        "Winter",
        "All"
      ],
      "description": "Seasons within the game. Because this is a flags-style enum, multiple seasons can be combined."
    },
    "TehPers.Core.Api.Gameplay.Weathers": {
      "type": "string",
      "enum": [
        "None",
        "Sunny",
        "Rainy",
        "All"
      ],
      "description": "Weathers within the game. Because this is a flags-style enum, multiple weathers can be combined."
    },
    "TehPers.FishingOverhaul.Api.WaterTypes": {
      "type": "string",
      "enum": [
        "None",
        "River",
        "PondOrOcean",
        "Freshwater",
        "All"
      ],
      "description": "Type of water that fish can be caught in. Each location handles these values differently."
    },
    "TehPers.FishingOverhaul.Api.Content.PositionConstraint": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "X": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/TehPers.FishingOverhaul.Api.Content.CoordinateConstraint"
            }
          ],
          "description": "Constraints for the x-coordinate.",
          "default": null
        },
        "Y": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/TehPers.FishingOverhaul.Api.Content.CoordinateConstraint"
            }
          ],
          "description": "Constraints for the Y-coordinate.",
          "default": null
        }
      },
      "description": "A set of constraints for positions."
    },
    "TehPers.FishingOverhaul.Api.Content.CoordinateConstraint": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "GreaterThan": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "number"
            }
          ],
          "description": "Coordinate value must be greater than this.",
          "default": null
        },
        "GreaterThanEq": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "number"
            }
          ],
          "description": "Coordinate value must be greater than or equal to this.",
          "default": null
        },
        "LessThan": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "number"
            }
          ],
          "description": "Coordinate value must be less than this.",
          "default": null
        },
        "LessThanEq": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "number"
            }
          ],
          "description": "Coordinate value must be less than or equal to this.",
          "default": null
        }
      },
      "description": "A set of constraints for coordinates."
    },
    "TehPers.FishingOverhaul.Api.Content.CatchActions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CustomEvents": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/TehPers.Core.Api.Items.NamespacedKey"
              }
            ]
          },
          "description": "Raise custom events with this name to notify SMAPI mods that this was caught. Event key format is \"namespace:key\" (for example \"TehPers.FishingOverhaul:GoldenWalnut\")."
        },
        "SetFlags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Sets one or more mail flags."
        },
        "StartQuests": {
          "type": "array",
          "items": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "description": "Sets one or more quests as active."
        },
        "AddMail": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Adds mail entries to the player's mail tomorrow."
        },
        "StartConversations": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "description": "Starts conversations. The key is the conversation ID and the value is the number of days."
        }
      },
      "description": "Actions to be executed on catch."
    }
  }
}